{
  "name": "SemanticModel",
  "compatibilityLevel": 1200,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "name": "EdFi ODS",
        "connectionString": "Provider=SQLNCLI11;Data Source=(local);Initial Catalog=edfi_ods_EQ24;Persist Security Info=true;User ID=edfi",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      },
      {
        "name": "PowerBI Database",
        "connectionString": "Provider=SQLNCLI11;Data Source=(local);Initial Catalog=edfi_ods_EQ24;User ID=edfi;Persist Security Info=true",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "Student",
        "columns": [
          {
            "name": "FirstName",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "FirstName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "MiddleName",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "MiddleName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LastSurname",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LastSurname",
            "sourceProviderType": "WChar"
          },
          {
            "name": "BirthDate",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "BirthDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "HispanicLatinoEthnicity",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "HispanicLatinoEthnicity",
            "sourceProviderType": "Boolean"
          },
          {
            "name": "EconomicDisadvantaged",
            "dataType": "int64",
            "sourceColumn": "EconomicDisadvantaged",
            "sourceProviderType": "Boolean"
          },
          {
            "name": "CitizenshipStatusTypeId",
            "dataType": "int64",
            "sourceColumn": "CitizenshipStatusTypeId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "StudentUniqueId",
            "dataType": "string",
            "sourceColumn": "StudentUniqueId",
            "sourceProviderType": "WChar"
          },
          {
            "name": "SexType",
            "dataType": "string",
            "sourceColumn": "SexType",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "ESE",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF (",
              "    LOOKUPVALUE (",
              "        StudentProgramAssociation[ProgramName],",
              "        'StudentProgramAssociation'[StudentSchoolKey], 'Student'[StudentSchoolKey],",
              "        StudentProgramAssociation[ProgramName], \"Special Education\"",
              "    ) = \"Special Education\",",
              "    \"Yes\",",
              "    \"No\"",
              ")"
            ]
          },
          {
            "name": "FederalRace",
            "dataType": "string",
            "sourceColumn": "FederalRace"
          },
          {
            "type": "calculated",
            "name": "Flag Fail ELA/Math (Current)",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR ELA = \"English Language Arts\"",
              "VAR Math = \"Mathematics\" /* NOTE: This is the the actual calculation.  We're storing it in a variable so that we can easily check if it's blank.  ",
              "The COUNTROWS DAX function returns a blank instead of 0, which renders as \"(BLANK)\" in Power BI. */",
              "VAR FailFilter =",
              "    FILTER (",
              "        StudentCourseCurrent,",
              "         ( [Subject] = ELA",
              "            || [Subject] = Math )",
              "            && 'Student'[StudentSchoolKey] = 'StudentCourseCurrent'[StudentSchoolKey]",
              "            && StudentCourseCurrent[Flag Fail ELA/Math] = \"yes\"",
              "    )",
              "VAR FailCount =",
              "    COUNTROWS ( FailFilter )",
              "RETURN",
              "    IF ( FailCount > 0, 2, BLANK () )"
            ]
          },
          {
            "type": "calculated",
            "name": "Student Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[LastSurname] & \",\" & \" \" & [FirstName]"
          },
          {
            "type": "calculated",
            "name": "HispanicLatino",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF ( [HispanicLatinoEthnicity] = \"TRUE\", \"Yes\", \"No\" )"
            ]
          },
          {
            "name": "Current Grade Level",
            "dataType": "string",
            "sourceColumn": "Current Grade Level"
          },
          {
            "name": "Current School ID",
            "dataType": "string",
            "sourceColumn": "Current School ID"
          },
          {
            "type": "calculated",
            "name": "Math LastYearSubLevel",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR ReportingMethod = \"Scale score\"",
              "VAR StateAssessmentTitle = \"State Assessment Math\"",
              "VAR MonthNow =",
              "    MONTH ( NOW () )",
              "VAR YearAdminDate =",
              "    IF ( MonthNow < 8, YEAR ( NOW () ) - 1, YEAR ( NOW () ) )",
              "VAR StudentAssessmentScoreResultTable =",
              "    GENERATE (",
              "        SELECTCOLUMNS (",
              "            VALUES ( 'StudentAssessmentScoreResult'[StudentSchoolKey] ),",
              "            \"ID\", [StudentSchoolKey]",
              "        ),",
              "        CALCULATETABLE (",
              "            TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "            'StudentAssessmentScoreResult'[StateAssessmentTitle] IN { StateAssessmentTitle },",
              "            YEAR ( 'StudentAssessmentScoreResult'[AdministrationDate] ) = YearAdminDate,",
              "            'StudentAssessmentScoreResult'[ReportingMethod] = ReportingMethod",
              "        )",
              "    )",
              "RETURN",
              "    CALCULATE (",
              "        AVERAGEX ( StudentAssessmentScoreResultTable, VALUE ( [Learning Gain Level] ) )",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Math PreviousYearSubLevel",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "VAR ReportingMethod = \"Scale score\"",
              "VAR StateAssessmentTitle = \"State Assessment Math\"",
              "VAR MonthNow =",
              "    MONTH ( NOW () )",
              "VAR YearAdminDate =",
              "    IF ( MonthNow < 8, YEAR ( NOW () ) - 2, YEAR ( NOW () ) - 1 )",
              "VAR StudentAssessmentScoreResultTable =",
              "    GENERATE (",
              "        SELECTCOLUMNS (",
              "            VALUES ( 'StudentAssessmentScoreResult'[StudentSchoolKey] ),",
              "            \"ID\", [StudentSchoolKey]",
              "        ),",
              "        CALCULATETABLE (",
              "            TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "            'StudentAssessmentScoreResult'[StateAssessmentTitle] IN { StateAssessmentTitle },",
              "            YEAR ( 'StudentAssessmentScoreResult'[AdministrationDate] ) = YearAdminDate,",
              "            'StudentAssessmentScoreResult'[ReportingMethod] = ReportingMethod",
              "        )",
              "    )",
              "RETURN",
              "    CALCULATE (",
              "        AVERAGEX ( StudentAssessmentScoreResultTable, VALUE ( [Learning Gain Level] ) )",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Flag Math LearningGain",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF (",
              "    [Math LastYearSubLevel] <> BLANK ()",
              "        && [Math PreviousYearSubLevel] <> BLANK ()",
              "        && [Math LastYearSubLevel] > [Math PreviousYearSubLevel],",
              "    \"+ improved\",",
              "    IF (",
              "        [Math LastYearSubLevel] <> BLANK ()",
              "            && [Math PreviousYearSubLevel] <> BLANK ()",
              "            && [Math LastYearSubLevel] < [Math PreviousYearSubLevel],",
              "        \"- regressed\",",
              "        IF (",
              "            [Math LastYearSubLevel] <> BLANK ()",
              "                && [Math PreviousYearSubLevel] <> BLANK ()",
              "                && [Math LastYearSubLevel] = [Math PreviousYearSubLevel],",
              "            \"0 stable\",",
              "            BLANK ()",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Math LastYearQuartile",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR ReportingMethod = \"Scale Score\"",
              "VAR StateAssessmentTitle = \"State Assessment Math\"",
              "VAR MonthNow =",
              "    MONTH ( NOW () )",
              "VAR YearAdminDate =",
              "    IF ( MonthNow < 8, YEAR ( NOW () ) - 1, YEAR ( NOW () ) )",
              "VAR StudentAssessmentScoreResultTable =",
              "    GENERATE (",
              "        SELECTCOLUMNS (",
              "            VALUES ( 'StudentAssessmentScoreResult'[StudentSchoolKey] ),",
              "            \"ID\", [StudentSchoolKey]",
              "        ),",
              "        CALCULATETABLE (",
              "            TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "            'StudentAssessmentScoreResult'[StateAssessmentTitle] IN { StateAssessmentTitle },",
              "            YEAR ( 'StudentAssessmentScoreResult'[AdministrationDate] ) = YearAdminDate,",
              "            'StudentAssessmentScoreResult'[ReportingMethod] = ReportingMethod",
              "        )",
              "    )",
              "RETURN",
              "    CALCULATE (",
              "        AVERAGEX ( StudentAssessmentScoreResultTable, VALUE ( [Quartile] ) )",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Math PreviousYearQuartile",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR ReportingMethod = \"Scale Score\"",
              "VAR StateAssessmentTitle = \"State Assessment Math\"",
              "VAR MonthNow =",
              "    MONTH ( NOW () )",
              "VAR YearAdminDate =",
              "    IF ( MonthNow < 8, YEAR ( NOW () ) - 2, YEAR ( NOW () ) - 1 )",
              "VAR StudentAssessmentScoreResultTable =",
              "    GENERATE (",
              "        SELECTCOLUMNS (",
              "            VALUES ( 'StudentAssessmentScoreResult'[StudentSchoolKey] ),",
              "            \"ID\", [StudentSchoolKey]",
              "        ),",
              "        CALCULATETABLE (",
              "            TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "            'StudentAssessmentScoreResult'[StateAssessmentTitle] IN { StateAssessmentTitle },",
              "            YEAR ( 'StudentAssessmentScoreResult'[AdministrationDate] ) = YearAdminDate,",
              "            'StudentAssessmentScoreResult'[ReportingMethod] = ReportingMethod",
              "        )",
              "    )",
              "RETURN",
              "    CALCULATE (",
              "        AVERAGEX ( StudentAssessmentScoreResultTable, VALUE ( [Quartile] ) )",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Math Trend Direction Last Two Years",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "VAR ReportingMethod = \"Scale Score\"",
              "VAR StateAssessmentTitle = \"State Assessment Math\"",
              "VAR CurrentGradeTable =",
              "    SUMMARIZE (",
              "        FILTER (",
              "            StudentSchoolAssociation,",
              "            StudentSchoolAssociation[ExitWithdrawDate] = BLANK ()",
              "                && 'StudentSchoolAssociation'[SchoolKey] <> \"383518\"",
              "                && 'StudentSchoolAssociation'[StudentSchoolKey] = 'Student'[StudentSchoolKey]",
              "        ),",
              "        \"CurrentGrade\", MIN ( 'StudentSchoolAssociation'[GradeLevel*] )",
              "    )",
              "VAR CurrentGrLev =",
              "    CALCULATE ( AVERAGEX ( CurrentGradeTable, VALUE ( [CurrentGrade] ) ) )",
              "VAR ScoreGr3 =",
              "    GENERATE (",
              "        SELECTCOLUMNS (",
              "            VALUES ( 'StudentAssessmentScoreResult'[StudentSchoolKey] ),",
              "            \"ID\", [StudentSchoolKey]",
              "        ),",
              "        CALCULATETABLE (",
              "            TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "            'StudentAssessmentScoreResult'[StateAssessmentTitle] IN { StateAssessmentTitle },",
              "            'StudentAssessmentScoreResult'[GradeLevel] = \"Third Grade\",",
              "            'StudentAssessmentScoreResult'[ReportingMethod] = ReportingMethod",
              "        )",
              "    )",
              "VAR ScoreGr4 =",
              "    GENERATE (",
              "        SELECTCOLUMNS (",
              "            VALUES ( 'StudentAssessmentScoreResult'[StudentSchoolKey] ),",
              "            \"ID\", [StudentSchoolKey]",
              "        ),",
              "        CALCULATETABLE (",
              "            TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "            'StudentAssessmentScoreResult'[StateAssessmentTitle] IN { StateAssessmentTitle },",
              "            'StudentAssessmentScoreResult'[GradeLevel] = \"Fourth Grade\",",
              "            'StudentAssessmentScoreResult'[ReportingMethod] = ReportingMethod",
              "        )",
              "    )",
              "VAR ScoreGr5 =",
              "    GENERATE (",
              "        SELECTCOLUMNS (",
              "            VALUES ( 'StudentAssessmentScoreResult'[StudentSchoolKey] ),",
              "            \"ID\", [StudentSchoolKey]",
              "        ),",
              "        CALCULATETABLE (",
              "            TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "            'StudentAssessmentScoreResult'[StateAssessmentTitle] IN { StateAssessmentTitle },",
              "            'StudentAssessmentScoreResult'[GradeLevel] = \"Fifth Grade\",",
              "            'StudentAssessmentScoreResult'[ReportingMethod] = ReportingMethod",
              "        )",
              "    )",
              "VAR ScoreGr6 =",
              "    GENERATE (",
              "        SELECTCOLUMNS (",
              "            VALUES ( 'StudentAssessmentScoreResult'[StudentSchoolKey] ),",
              "            \"ID\", [StudentSchoolKey]",
              "        ),",
              "        CALCULATETABLE (",
              "            TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "            'StudentAssessmentScoreResult'[StateAssessmentTitle] IN { StateAssessmentTitle },",
              "            'StudentAssessmentScoreResult'[GradeLevel] = \"Sixth Grade\",",
              "            'StudentAssessmentScoreResult'[ReportingMethod] = ReportingMethod",
              "        )",
              "    )",
              "VAR ScoreGr7 =",
              "    GENERATE (",
              "        SELECTCOLUMNS (",
              "            VALUES ( 'StudentAssessmentScoreResult'[StudentSchoolKey] ),",
              "            \"ID\", [StudentSchoolKey]",
              "        ),",
              "        CALCULATETABLE (",
              "            TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "            'StudentAssessmentScoreResult'[StateAssessmentTitle] IN { StateAssessmentTitle },",
              "            'StudentAssessmentScoreResult'[GradeLevel] = \"Seventh Grade\",",
              "            'StudentAssessmentScoreResult'[ReportingMethod] = ReportingMethod",
              "        )",
              "    )",
              "VAR ScoreGr8 =",
              "    GENERATE (",
              "        SELECTCOLUMNS (",
              "            VALUES ( 'StudentAssessmentScoreResult'[StudentSchoolKey] ),",
              "            \"ID\", [StudentSchoolKey]",
              "        ),",
              "        CALCULATETABLE (",
              "            TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "            'StudentAssessmentScoreResult'[StateAssessmentTitle] IN { StateAssessmentTitle },",
              "            'StudentAssessmentScoreResult'[GradeLevel] = \"Eighth Grade\",",
              "            'StudentAssessmentScoreResult'[ReportingMethod] = ReportingMethod",
              "        )",
              "    )",
              "VAR res_Gr3 =",
              "    CALCULATE ( AVERAGEX ( ScoreGr3, VALUE ( [Achievement Level %] ) ) )",
              "VAR res_Gr4 =",
              "    CALCULATE ( AVERAGEX ( ScoreGr4, VALUE ( [Achievement Level %] ) ) )",
              "VAR res_Gr5 =",
              "    CALCULATE ( AVERAGEX ( ScoreGr5, VALUE ( [Achievement Level %] ) ) )",
              "VAR res_Gr6 =",
              "    CALCULATE ( AVERAGEX ( ScoreGr6, VALUE ( [Achievement Level %] ) ) )",
              "VAR res_Gr7 =",
              "    CALCULATE ( AVERAGEX ( ScoreGr7, VALUE ( [Achievement Level %] ) ) )",
              "VAR res_Gr8 =",
              "    CALCULATE ( AVERAGEX ( ScoreGr8, VALUE ( [Achievement Level %] ) ) )",
              "VAR TrendGr8 =",
              "    IF (",
              "        CurrentGrLev = 8",
              "            && res_Gr8 = BLANK ()",
              "            && res_Gr7 <> 0",
              "            && res_Gr6 <> 0",
              "            && ( res_Gr7 - res_Gr6 ) > 0.1,",
              "        \"improved\",",
              "        IF (",
              "            CurrentGrLev = 8",
              "                && res_Gr8 = BLANK ()",
              "                && res_Gr7 <> 0",
              "                && res_Gr6 <> 0",
              "                && ( res_Gr7 - res_Gr6 ) < -0.1,",
              "            \"regressed\",",
              "            IF (",
              "                CurrentGrLev = 8",
              "                    && res_Gr8 = BLANK ()",
              "                    && res_Gr7 <> 0",
              "                    && res_Gr6 <> 0",
              "                    && ( res_Gr7 - res_Gr6 ) <= 0.1",
              "                    && ( res_Gr7 - res_Gr6 ) >= -0.1,",
              "                \"stable\",",
              "                IF (",
              "                    CurrentGrLev = 8",
              "                        && res_Gr8 = BLANK ()",
              "                        && ( res_Gr7 = 0",
              "                        || res_Gr6 = 0 ),",
              "                    \"not available\",",
              "                    IF (",
              "                        CurrentGrLev = 8",
              "                            && res_Gr8 <> BLANK ()",
              "                            && res_Gr8 <> 0",
              "                            && res_Gr7 <> 0",
              "                            && ( res_Gr8 - res_Gr7 ) > 0.1,",
              "                        \"improved\",",
              "                        IF (",
              "                            CurrentGrLev = 8",
              "                                && res_Gr8 <> BLANK ()",
              "                                && res_Gr8 <> 0",
              "                                && res_Gr7 <> 0",
              "                                && ( res_Gr8 - res_Gr7 ) < -0.1,",
              "                            \"regressed\",",
              "                            IF (",
              "                                CurrentGrLev = 8",
              "                                    && res_Gr8 <> BLANK ()",
              "                                    && res_Gr8 <> 0",
              "                                    && res_Gr7 <> 0",
              "                                    && ( res_Gr8 - res_Gr7 ) <= 0.1",
              "                                    && ( res_Gr8 - res_Gr7 ) >= -0.1,",
              "                                \"stable\",",
              "                                IF (",
              "                                    CurrentGrLev = 8",
              "                                        && res_Gr8 <> BLANK ()",
              "                                        && ( res_Gr8 = 0",
              "                                        || res_Gr7 = 0 ),",
              "                                    \"not available\"",
              "                                )",
              "                            )",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        )",
              "    )",
              "VAR TrendGr7 =",
              "    IF (",
              "        CurrentGrLev = 7",
              "            && res_Gr7 = BLANK ()",
              "            && res_Gr6 <> 0",
              "            && res_Gr5 <> 0",
              "            && ( res_Gr6 - res_Gr5 ) > 0.1,",
              "        \"improved\",",
              "        IF (",
              "            CurrentGrLev = 7",
              "                && res_Gr7 = BLANK ()",
              "                && res_Gr6 <> 0",
              "                && res_Gr5 <> 0",
              "                && ( res_Gr6 - res_Gr5 ) < -0.1,",
              "            \"regressed\",",
              "            IF (",
              "                CurrentGrLev = 7",
              "                    && res_Gr7 = BLANK ()",
              "                    && res_Gr6 <> 0",
              "                    && res_Gr5 <> 0",
              "                    && ( res_Gr6 - res_Gr5 ) <= 0.1",
              "                    && ( res_Gr6 - res_Gr5 ) >= -0.1,",
              "                \"stable\",",
              "                IF (",
              "                    CurrentGrLev = 7",
              "                        && res_Gr7 = BLANK ()",
              "                        && ( res_Gr6 = 0",
              "                        || res_Gr5 = 0 ),",
              "                    \"not available\",",
              "                    IF (",
              "                        CurrentGrLev = 7",
              "                            && res_Gr7 <> BLANK ()",
              "                            && res_Gr7 <> 0",
              "                            && res_Gr6 <> 0",
              "                            && ( res_Gr7 - res_Gr6 ) > 0.1,",
              "                        \"improved\",",
              "                        IF (",
              "                            CurrentGrLev = 7",
              "                                && res_Gr7 <> BLANK ()",
              "                                && res_Gr7 <> 0",
              "                                && res_Gr6 <> 0",
              "                                && ( res_Gr7 - res_Gr6 ) < -0.1,",
              "                            \"regressed\",",
              "                            IF (",
              "                                CurrentGrLev = 7",
              "                                    && res_Gr7 <> BLANK ()",
              "                                    && res_Gr7 <> 0",
              "                                    && res_Gr6 <> 0",
              "                                    && ( res_Gr7 - res_Gr6 ) <= 0.1",
              "                                    && ( res_Gr7 - res_Gr6 ) >= -0.1,",
              "                                \"stable\",",
              "                                IF (",
              "                                    CurrentGrLev = 7",
              "                                        && res_Gr7 <> BLANK ()",
              "                                        && ( res_Gr7 = 0",
              "                                        || res_Gr6 = 0 ),",
              "                                    \"not available\"",
              "                                )",
              "                            )",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        )",
              "    )",
              "VAR TrendGr6 =",
              "    IF (",
              "        CurrentGrLev = 6",
              "            && res_Gr6 = BLANK ()",
              "            && res_Gr5 <> 0",
              "            && res_Gr4 <> 0",
              "            && ( res_Gr5 - res_Gr4 ) > 0.1,",
              "        \"improved\",",
              "        IF (",
              "            CurrentGrLev = 6",
              "                && res_Gr6 = BLANK ()",
              "                && res_Gr5 <> 0",
              "                && res_Gr4 <> 0",
              "                && ( res_Gr5 - res_Gr4 ) < -0.1,",
              "            \"regressed\",",
              "            IF (",
              "                CurrentGrLev = 6",
              "                    && res_Gr6 = BLANK ()",
              "                    && res_Gr5 <> 0",
              "                    && res_Gr4 <> 0",
              "                    && ( res_Gr5 - res_Gr4 ) <= 0.1",
              "                    && ( res_Gr5 - res_Gr4 ) >= -0.1,",
              "                \"stable\",",
              "                IF (",
              "                    CurrentGrLev = 6",
              "                        && res_Gr6 = BLANK ()",
              "                        && ( res_Gr5 = 0",
              "                        || res_Gr4 = 0 ),",
              "                    \"not available\",",
              "                    IF (",
              "                        CurrentGrLev = 6",
              "                            && res_Gr6 <> BLANK ()",
              "                            && res_Gr6 <> 0",
              "                            && res_Gr5 <> 0",
              "                            && ( res_Gr6 - res_Gr5 ) > 0.1,",
              "                        \"improved\",",
              "                        IF (",
              "                            CurrentGrLev = 6",
              "                                && res_Gr6 <> BLANK ()",
              "                                && res_Gr6 <> 0",
              "                                && res_Gr5 <> 0",
              "                                && ( res_Gr6 - res_Gr5 ) < -0.1,",
              "                            \"regressed\",",
              "                            IF (",
              "                                CurrentGrLev = 6",
              "                                    && res_Gr6 <> BLANK ()",
              "                                    && res_Gr6 <> 0",
              "                                    && res_Gr5 <> 0",
              "                                    && ( res_Gr6 - res_Gr5 ) <= 0.1",
              "                                    && ( res_Gr6 - res_Gr5 ) >= -0.1,",
              "                                \"stable\",",
              "                                IF (",
              "                                    CurrentGrLev = 6",
              "                                        && res_Gr6 <> BLANK ()",
              "                                        && ( res_Gr6 = 0",
              "                                        || res_Gr5 = 0 ),",
              "                                    \"not available\"",
              "                                )",
              "                            )",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        )",
              "    )",
              "RETURN",
              "    IF (",
              "        CurrentGrLev = 8,",
              "        TrendGr8,",
              "        IF ( CurrentGrLev = 7, TrendGr7, IF ( CurrentGrLev = 6, TrendGr6, BLANK () ) )",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Math Previous Year Achievement Level %",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR ReportingMethod = \"Scale Score\"",
              "VAR StateAssessmentTitle = \"State Assessment Math\"",
              "VAR MonthNow =",
              "    MONTH ( NOW () )",
              "VAR YearAdminDate =",
              "    IF ( MonthNow < 8, YEAR ( NOW () ) - 2, YEAR ( NOW () ) - 1 )",
              "VAR StudentAssessmentScoreResultTable =",
              "    GENERATE (",
              "        SELECTCOLUMNS (",
              "            VALUES ( 'StudentAssessmentScoreResult'[StudentSchoolKey] ),",
              "            \"ID\", [StudentSchoolKey]",
              "        ),",
              "        CALCULATETABLE (",
              "            TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "            'StudentAssessmentScoreResult'[StateAssessmentTitle] IN { StateAssessmentTitle },",
              "            YEAR ( 'StudentAssessmentScoreResult'[AdministrationDate] ) = YearAdminDate,",
              "            'StudentAssessmentScoreResult'[ReportingMethod] = ReportingMethod",
              "        )",
              "    )",
              "RETURN",
              "    CALCULATE (",
              "        AVERAGEX ( StudentAssessmentScoreResultTable, VALUE ( [Achievement Level %] ) )",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Math Last Year Achievement Level %",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR ReportingMethod = \"Scale Score\"",
              "VAR StateAssessmentTitle = \"State Assessment Math\"",
              "VAR MonthNow =",
              "    MONTH ( NOW () )",
              "VAR YearAdminDate =",
              "    IF ( MonthNow < 8, YEAR ( NOW () ) - 1, YEAR ( NOW () ) )",
              "VAR StudentAssessmentScoreResultTable =",
              "    GENERATE (",
              "        SELECTCOLUMNS (",
              "            VALUES ( 'StudentAssessmentScoreResult'[StudentSchoolKey] ),",
              "            \"ID\", [StudentSchoolKey]",
              "        ),",
              "        CALCULATETABLE (",
              "            TOPN ( 1, 'StudentAssessmentScoreResult', [AdministrationDate], DESC ),",
              "            'StudentAssessmentScoreResult'[StateAssessmentTitle] IN { StateAssessmentTitle },",
              "            YEAR ( 'StudentAssessmentScoreResult'[AdministrationDate] ) = YearAdminDate,",
              "            'StudentAssessmentScoreResult'[ReportingMethod] = ReportingMethod",
              "        )",
              "    )",
              "RETURN",
              "    CALCULATE (",
              "        AVERAGEX ( StudentAssessmentScoreResultTable, VALUE ( [Achievement Level %] ) )",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Math LastYearSubLevelString",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF (",
              "    [Math LastYearSubLevel] = 5,",
              "    \"Level 5\",",
              "    IF (",
              "        [Math LastYearSubLevel] = 4,",
              "        \"Level 4\",",
              "        IF (",
              "            [Math LastYearSubLevel] = 3,",
              "            \"Level 3\",",
              "            IF (",
              "                [Math LastYearSubLevel] = 3.1,",
              "                \"Level 3 Low\",",
              "                IF (",
              "                    [Math LastYearSubLevel] = 3.3,",
              "                    \"Level 3 High\",",
              "                    IF (",
              "                        [Math LastYearSubLevel] = 2.1,",
              "                        \"Level 2 Low\",",
              "                        IF (",
              "                            [Math LastYearSubLevel] = 2.3,",
              "                            \"Level 2 High\",",
              "                            IF (",
              "                                [Math LastYearSubLevel] = 1.1,",
              "                                \"Level 1 Low\",",
              "                                IF (",
              "                                    [Math LastYearSubLevel] = 1.2,",
              "                                    \"Level 1 Mid\",",
              "                                    IF ( [Math LastYearSubLevel] = 1.3, \"Level 1 High\" )",
              "                                )",
              "                            )",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Math PreviousYearSubLevelString",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF (",
              "    [Math PreviousYearSubLevel] = 5,",
              "    \"Level 5\",",
              "    IF (",
              "        [Math PreviousYearSubLevel] = 4,",
              "        \"Level 4\",",
              "        IF (",
              "            [Math PreviousYearSubLevel] = 3,",
              "            \"Level 3\",",
              "            IF (",
              "                [Math PreviousYearSubLevel] = 3.1,",
              "                \"Level 3 Low\",",
              "                IF (",
              "                    [Math PreviousYearSubLevel] = 3.3,",
              "                    \"Level 3 High\",",
              "                    IF (",
              "                        [Math PreviousYearSubLevel] = 2.1,",
              "                        \"Level 2 Low\",",
              "                        IF (",
              "                            [Math PreviousYearSubLevel] = 2.3,",
              "                            \"Level 2 High\",",
              "                            IF (",
              "                                [Math PreviousYearSubLevel] = 1.1,",
              "                                \"Level 1 Low\",",
              "                                IF (",
              "                                    [Math PreviousYearSubLevel] = 1.2,",
              "                                    \"Level 1 Mid\",",
              "                                    IF (",
              "                                        [Math PreviousYearSubLevel] = 1.3,",
              "                                        \"Level 1 High\"",
              "                                    )",
              "                                )",
              "                            )",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Math Trend % Difference",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "IF (",
              "    [Math Last Year Achievement Level %] <> BLANK ()",
              "        && [Math Previous Year Achievement Level %] <> BLANK (),",
              "    [Math Last Year Achievement Level %] - [Math Previous Year Achievement Level %],",
              "    BLANK ()",
              ")"
            ],
            "formatString": "0.00"
          },
          {
            "name": "StudentSchoolKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolKey"
          },
          {
            "name": "OldEthnicityTypeId",
            "dataType": "string",
            "sourceColumn": "OldEthnicityTypeId"
          }
        ],
        "partitions": [
          {
            "name": "Student",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ",
                "       BirthDate, ",
                "       CitizenshipStatusTypeId, ",
                "       [Current Grade Level], ",
                "       [Current School ID], ",
                "       EconomicDisadvantaged, ",
                "       FederalRace, ",
                "       FirstName, ",
                "       HispanicLatinoEthnicity, ",
                "       LastSurname, ",
                "       MiddleName, ",
                "       OldEthnicityTypeId, ",
                "       SexType, ",
                "       StudentUniqueId, ",
                "       StudentSchoolKey ",
                "FROM ",
                "     [bi].[amt.Student]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "       BirthDate, ",
                  "       CitizenshipStatusTypeId, ",
                  "       [Current Grade Level], ",
                  "       [Current School ID], ",
                  "       EconomicDisadvantaged, ",
                  "       FederalRace, ",
                  "       FirstName, ",
                  "       HispanicLatinoEthnicity, ",
                  "       LastSurname, ",
                  "       MiddleName, ",
                  "       OldEthnicityTypeId, ",
                  "       SexType, ",
                  "       StudentUniqueId, ",
                  "       StudentSchoolKey ",
                  "FROM ",
                  "     [bi].[amt.Student]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "CurrentGradeLevel*",
            "expression": [
              "",
              "VAR CurrentGradeTable =",
              "    SUMMARIZE (",
              "        FILTER (",
              "            StudentSchoolAssociation,",
              "            StudentSchoolAssociation[ExitWithdrawDate] = BLANK ()",
              "                && 'StudentSchoolAssociation'[SchoolKey] <> \"383518\"",
              "                && 'StudentSchoolAssociation'[SchoolKey] <> \"150022\"",
              "        ),",
              "        [StudentSchoolKey],",
              "        \"CurrentGrade\", MIN ( 'StudentSchoolAssociation'[GradeLevel*] )",
              "    )",
              "RETURN",
              "    CALCULATE ( AVERAGEX ( CurrentGradeTable, VALUE ( [CurrentGrade] ) ) )"
            ],
            "isHidden": true
          },
          {
            "name": "CurrentSchoolID*",
            "expression": [
              "",
              "VAR CurrentSchoolTable =",
              "    SUMMARIZE (",
              "        FILTER (",
              "            StudentSchoolAssociation,",
              "            StudentSchoolAssociation[ExitWithdrawDate] = BLANK ()",
              "        ),",
              "        [StudentSchoolKey],",
              "        \"SchoolKey\", MIN ( 'StudentSchoolAssociation'[SchoolKey] )",
              "    )",
              "RETURN",
              "    CALCULATE ( AVERAGEX ( CurrentSchoolTable, VALUE ( [SchoolKey] ) ) )"
            ],
            "isHidden": true
          },
          {
            "name": "Number Of Filtered Records",
            "expression": "COUNTROWS ( ALLSELECTED ( Student[Student Name] ) )"
          },
          {
            "name": "Trend Last Two Years Improved",
            "expression": [
              "",
              "VAR filteredTable =",
              "    FILTER ( Student, [Flag Math LearningGain] = \"+ improved\" )",
              "VAR count_Rows =",
              "    COUNTROWS ( filteredTable )",
              "RETURN",
              "    IF ( count_Rows = BLANK (), 0, count_Rows )"
            ]
          },
          {
            "name": "Trend Last Two Years Regressed",
            "expression": [
              "",
              "VAR filteredTable =",
              "    FILTER ( Student, [Flag Math LearningGain] = \"- regressed\" )",
              "VAR count_Rows =",
              "    COUNTROWS ( filteredTable )",
              "RETURN",
              "    IF ( count_Rows = BLANK (), 0, count_Rows )"
            ]
          },
          {
            "name": "Trend Last Two Years Stable",
            "expression": [
              "",
              "VAR filteredTable =",
              "    FILTER ( Student, [Flag Math LearningGain] = \"0 stable\" )",
              "VAR count_Rows =",
              "    COUNTROWS ( filteredTable )",
              "RETURN",
              "    IF ( count_Rows = BLANK (), 0, count_Rows )"
            ]
          },
          {
            "name": "Trend Last Two Years Not Available",
            "expression": [
              "",
              "VAR filteredTable =",
              "    FILTER ( Student, [Flag Math LearningGain] = BLANK () )",
              "VAR count_Rows =",
              "    COUNTROWS ( filteredTable )",
              "RETURN",
              "    IF ( count_Rows = BLANK (), 0, count_Rows )"
            ]
          },
          {
            "name": "Number of Students",
            "expression": "[Trend Last Two Years Improved] + [Trend Last Two Years Regressed] + [Trend Last Two Years Stable] + [Trend Last Two Years Not Available]"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "       BirthDate, ",
              "       CitizenshipStatusTypeId, ",
              "       [Current Grade Level], ",
              "       [Current School ID], ",
              "       EconomicDisadvantaged, ",
              "       FederalRace, ",
              "       FirstName, ",
              "       HispanicLatinoEthnicity, ",
              "       LastSurname, ",
              "       MiddleName, ",
              "       OldEthnicityTypeId, ",
              "       SexType, ",
              "       StudentUniqueId, ",
              "       StudentSchoolKey ",
              "FROM ",
              "     [bi].[amt.Student]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "EWS.Student"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "       BirthDate, ",
              "       CitizenshipStatusTypeId, ",
              "       [Current Grade Level], ",
              "       [Current School ID], ",
              "       EconomicDisadvantaged, ",
              "       FederalRace, ",
              "       FirstName, ",
              "       HispanicLatinoEthnicity, ",
              "       LastSurname, ",
              "       MiddleName, ",
              "       OldEthnicityTypeId, ",
              "       SexType, ",
              "       StudentUniqueId, ",
              "       StudentSchoolKey ",
              "FROM ",
              "     [bi].[amt.Student]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentSchoolAssociation",
        "isHidden": true,
        "columns": [
          {
            "name": "SchoolYear",
            "dataType": "string",
            "sourceColumn": "SchoolYear",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "EntryDate",
            "dataType": "dateTime",
            "sourceColumn": "EntryDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Grade Level",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Grade Level",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ExitWithdrawDate",
            "dataType": "dateTime",
            "sourceColumn": "ExitWithdrawDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "NameOfInstitution",
            "dataType": "string",
            "sourceColumn": "NameOfInstitution"
          },
          {
            "name": "ExitWithdrawCode",
            "dataType": "string",
            "sourceColumn": "ExitWithdrawCode"
          },
          {
            "name": "ExitWithdrawDescription",
            "dataType": "string",
            "sourceColumn": "ExitWithdrawDescription"
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyId"
          },
          {
            "name": "ClassOfSchoolYear",
            "dataType": "int64",
            "sourceColumn": "ClassOfSchoolYear"
          },
          {
            "name": "GraduationSchoolYear",
            "dataType": "int64",
            "sourceColumn": "GraduationSchoolYear"
          },
          {
            "type": "calculated",
            "name": "GradeLevel",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "/*This column is used for visual filtering*/",
              "IF([Grade Level] = \"First Grade\", \"01\",",
              "IF([Grade Level] = \"Second Grade\", \"02\",",
              "IF([Grade Level] = \"Third Grade\", \"03\",",
              "IF([Grade Level] = \"Fourth Grade\", \"04\",",
              "IF([Grade Level] = \"Fifth Grade\", \"05\",",
              "IF([Grade Level] = \"Sixth Grade\", \"06\",",
              "IF([Grade Level] = \"Seventh Grade\", \"07\",",
              "IF([Grade Level] = \"Eighth Grade\", \"08\",",
              "IF([Grade Level] = \"Ninth Grade\", \"09\",",
              "IF([Grade Level] = \"Tenth Grade\", \"10\",",
              "IF([Grade Level] = \"Eleventh Grade\", \"11\",",
              "IF([Grade Level] = \"Twelfth Grade\", \"12\",",
              "IF([Grade Level] = \"Kindergarten\", \"K\",",
              "IF([Grade Level] = \"Pre-K\", \"PK\",",
              " \"Other\"",
              "))))))))))))))"
            ]
          },
          {
            "type": "calculated",
            "name": "GradeLevel*",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "/*This column is used for calculations, all should be numbers*/",
              "IF([Grade Level] = \"First Grade\", \"01\",",
              "IF([Grade Level] = \"Second Grade\", \"02\",",
              "IF([Grade Level] = \"Third Grade\", \"03\",",
              "IF([Grade Level] = \"Fourth Grade\", \"04\",",
              "IF([Grade Level] = \"Fifth Grade\", \"05\",",
              "IF([Grade Level] = \"Sixth Grade\", \"06\",",
              "IF([Grade Level] = \"Seventh Grade\", \"07\",",
              "IF([Grade Level] = \"Eighth Grade\", \"08\",",
              "IF([Grade Level] = \"Ninth Grade\", \"09\",",
              "IF([Grade Level] = \"Tenth Grade\", \"10\",",
              "IF([Grade Level] = \"Eleventh Grade\", \"11\",",
              "IF([Grade Level] = \"Twelfth Grade\", \"12\",",
              "IF([Grade Level] = \"Kindergarten\", \"0\",",
              "IF([Grade Level] = \"Pre-K\", \"-1\",",
              "BLANK()",
              "))))))))))))))"
            ]
          },
          {
            "name": "EntryGradeLevelDescriptorId",
            "dataType": "int64",
            "sourceColumn": "EntryGradeLevelDescriptorId"
          },
          {
            "name": "GradeLevelNum",
            "dataType": "string",
            "sourceColumn": "GradeLevelNum"
          },
          {
            "name": "StudentSchoolKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolKey"
          },
          {
            "name": "SchoolKey",
            "dataType": "string",
            "sourceColumn": "SchoolKey"
          }
        ],
        "partitions": [
          {
            "name": "StudentSchoolAssociation",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT StudentSchoolKey,",
                "SchoolKey,",
                "NameOfInstitution,",
                "SchoolYear,",
                "EntryDate,",
                "EntryGradeLevelDescriptorId,",
                "[Grade Level],",
                "GradeLevelNum,",
                "ExitWithdrawDate,",
                "ExitWithdrawCode,",
                "ExitWithdrawDescription,",
                "ClassOfSchoolYear,",
                "GraduationSchoolYear,",
                "LocalEducationAgencyId",
                "",
                "FROM [bi].[amt.StudentSchoolAssociation]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT StudentSchoolKey,",
                  "SchoolKey,",
                  "NameOfInstitution,",
                  "SchoolYear,",
                  "EntryDate,",
                  "EntryGradeLevelDescriptorId,",
                  "[Grade Level],",
                  "GradeLevelNum,",
                  "ExitWithdrawDate,",
                  "ExitWithdrawCode,",
                  "ExitWithdrawDescription,",
                  "ClassOfSchoolYear,",
                  "GraduationSchoolYear,",
                  "LocalEducationAgencyId",
                  "",
                  "FROM [bi].[amt.StudentSchoolAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT StudentSchoolKey,",
              "SchoolKey,",
              "NameOfInstitution,",
              "SchoolYear,",
              "EntryDate,",
              "EntryGradeLevelDescriptorId,",
              "[Grade Level],",
              "GradeLevelNum,",
              "ExitWithdrawDate,",
              "ExitWithdrawCode,",
              "ExitWithdrawDescription,",
              "ClassOfSchoolYear,",
              "GraduationSchoolYear,",
              "LocalEducationAgencyId",
              "",
              "FROM [bi].[amt.StudentSchoolAssociation]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "EWS.StudentSchoolAssociation"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT StudentSchoolKey,",
              "SchoolKey,",
              "NameOfInstitution,",
              "SchoolYear,",
              "EntryDate,",
              "EntryGradeLevelDescriptorId,",
              "[Grade Level],",
              "GradeLevelNum,",
              "ExitWithdrawDate,",
              "ExitWithdrawCode,",
              "ExitWithdrawDescription,",
              "ClassOfSchoolYear,",
              "GraduationSchoolYear,",
              "LocalEducationAgencyId",
              "",
              "FROM [bi].[amt.StudentSchoolAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentSectionAssociation",
        "columns": [
          {
            "name": "ClassPeriodName",
            "dataType": "string",
            "sourceColumn": "ClassPeriodName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ClassroomIdentificationCode",
            "dataType": "string",
            "sourceColumn": "ClassroomIdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LocalCourseCode",
            "dataType": "string",
            "sourceColumn": "LocalCourseCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "SequenceOfCourse",
            "dataType": "int64",
            "sourceColumn": "SequenceOfCourse",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "BeginDate",
            "dataType": "dateTime",
            "sourceColumn": "BeginDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "sourceColumn": "EndDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "HomeroomIndicator",
            "dataType": "boolean",
            "sourceColumn": "HomeroomIndicator",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "Boolean"
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyId"
          },
          {
            "type": "calculated",
            "name": "StaffUSI_A",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR FirstStaffUSI =",
              "    CALCULATE (",
              "        FIRSTNONBLANK ( StaffSectionAssociation[StaffUSI], TRUE () ),",
              "        FILTER (",
              "            StaffSectionAssociation,",
              "            'StaffSectionAssociation'[SchoolKey] = 'StudentSectionAssociation'[SchoolKey]",
              "                && StaffSectionAssociation[SchoolYear] = StudentSectionAssociation[SchoolYear]",
              "                && StaffSectionAssociation[SectionKey] = StudentSectionAssociation[SectionKey]",
              "        )",
              "    )",
              "RETURN",
              "    FirstStaffUSI"
            ]
          },
          {
            "type": "calculated",
            "name": "StaffUSI_B",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR FirstStaffUSI =",
              "    CALCULATE (",
              "        LASTNONBLANK ( StaffSectionAssociation[StaffUSI], TRUE () ),",
              "        FILTER (",
              "            StaffSectionAssociation,",
              "            'StaffSectionAssociation'[SchoolKey] = 'StudentSectionAssociation'[SchoolKey]",
              "                && StaffSectionAssociation[SchoolYear] = StudentSectionAssociation[SchoolYear]",
              "                && StaffSectionAssociation[SectionKey] = StudentSectionAssociation[SectionKey]",
              "        )",
              "    )",
              "RETURN",
              "    FirstStaffUSI"
            ]
          },
          {
            "type": "calculated",
            "name": "Dropped",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "IF ( [EndDate] < TODAY (), 1, BLANK () )"
          },
          {
            "type": "calculated",
            "name": "Student Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "LOOKUPVALUE (",
              "    Student[Student Name],",
              "    'Student'[StudentSchoolKey], 'StudentSectionAssociation'[StudentSchoolKey]",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "SchoolName",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "LOOKUPVALUE (",
              "    School[School Name],",
              "    'School'[SchoolKey], 'StudentSectionAssociation'[SchoolKey]",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "SchoolName FocusGroup",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF([SchoolName] = \"Belle Terre Elementary School\", \"School A\",",
              "IF([SchoolName] = \"Buddy Taylor Middle School\", \"School B\",",
              "IF([SchoolName] = \"Bunnell Elementary School\", \"School C\",",
              "IF([SchoolName] = \"iFlagler\", \"School D\",",
              "IF([SchoolName] = \"Indian Trails Middle School\", \"School F\",",
              "IF([SchoolName] = \"Old Kings Elementary School\", \"School G\",",
              "IF([SchoolName] = \"Rymfire Elementary SchoolRymfire Elementary School\", \"School H\",",
              "IF([SchoolName] = \"Wadsworth Elementary School\", \"School K\",",
              "BLANK()",
              "))))))))"
            ]
          },
          {
            "name": "StudentSectionKey",
            "dataType": "string",
            "sourceColumn": "StudentSectionKey"
          },
          {
            "name": "SectionKey",
            "dataType": "string",
            "sourceColumn": "SectionKey"
          },
          {
            "name": "StudentSchoolKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolKey"
          },
          {
            "name": "SchoolKey",
            "dataType": "string",
            "sourceColumn": "SchoolKey"
          }
        ],
        "partitions": [
          {
            "name": "StudentSectionAssociation",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT StudentSchoolKey,",
                "SchoolKey,",
                "SectionKey,",
                "ClassPeriodName,",
                "ClassroomIdentificationCode,",
                "LocalCourseCode,",
                "SequenceOfCourse,",
                "SchoolYear,",
                "BeginDate,",
                "EndDate,",
                "HomeroomIndicator,",
                "LocalEducationAgencyId,",
                "StudentSectionKey",
                "  FROM [bi].[amt.StudentSectionAssociation]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT StudentSchoolKey,",
                  "SchoolKey,",
                  "SectionKey,",
                  "ClassPeriodName,",
                  "ClassroomIdentificationCode,",
                  "LocalCourseCode,",
                  "SequenceOfCourse,",
                  "SchoolYear,",
                  "BeginDate,",
                  "EndDate,",
                  "HomeroomIndicator,",
                  "LocalEducationAgencyId,",
                  "StudentSectionKey",
                  "  FROM [bi].[amt.StudentSectionAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT StudentSchoolKey,",
              "SchoolKey,",
              "SectionKey,",
              "ClassPeriodName,",
              "ClassroomIdentificationCode,",
              "LocalCourseCode,",
              "SequenceOfCourse,",
              "SchoolYear,",
              "BeginDate,",
              "EndDate,",
              "HomeroomIndicator,",
              "LocalEducationAgencyId,",
              "StudentSectionKey",
              "  FROM [bi].[amt.StudentSectionAssociation]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "EWS.StudentSectionAssociation"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT StudentSchoolKey,",
              "SchoolKey,",
              "SectionKey,",
              "ClassPeriodName,",
              "ClassroomIdentificationCode,",
              "LocalCourseCode,",
              "SequenceOfCourse,",
              "SchoolYear,",
              "BeginDate,",
              "EndDate,",
              "HomeroomIndicator,",
              "LocalEducationAgencyId,",
              "StudentSectionKey",
              "  FROM [bi].[amt.StudentSectionAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "School",
        "columns": [
          {
            "name": "SchoolType",
            "dataType": "string",
            "sourceColumn": "SchoolType",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "LocalEducationAgencyId"
          },
          {
            "name": "School Name",
            "dataType": "string",
            "sourceColumn": "SchoolName"
          },
          {
            "name": "SchoolKey",
            "dataType": "string",
            "sourceColumn": "SchoolKey"
          }
        ],
        "partitions": [
          {
            "name": "School-",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [SchoolKey]",
                "      ,[LocalEducationAgencyId]",
                "      --,[SchoolTypeId]",
                "      ,SchoolName",
                "      ,[SchoolType]",
                "FROM [bi].[amt.School]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [SchoolKey]",
                  "      ,[LocalEducationAgencyId]",
                  "      --,[SchoolTypeId]",
                  "      ,SchoolName",
                  "      ,[SchoolType]",
                  "FROM [bi].[amt.School]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [SchoolKey]",
              "      ,[LocalEducationAgencyId]",
              "      --,[SchoolTypeId]",
              "      ,SchoolName",
              "      ,[SchoolType]",
              "FROM [bi].[amt.School]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "EWS.School"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [SchoolKey]",
              "      ,[LocalEducationAgencyId]",
              "      --,[SchoolTypeId]",
              "      ,SchoolName",
              "      ,[SchoolType]",
              "FROM [bi].[amt.School]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentProgramAssociation",
        "isHidden": true,
        "columns": [
          {
            "name": "ProgramName",
            "dataType": "string",
            "sourceColumn": "ProgramName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "BeginDate",
            "dataType": "dateTime",
            "sourceColumn": "BeginDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "sourceColumn": "EndDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "StudentSchoolKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolKey"
          }
        ],
        "partitions": [
          {
            "name": "StudentProgramAssociation",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [StudentSchoolKey]",
                "      ,[ProgramName]",
                "      ,[BeginDate]",
                "      ,[EndDate]",
                "FROM [bi].[amt.StudentProgramAssociation]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StudentSchoolKey]",
                  "      ,[ProgramName]",
                  "      ,[BeginDate]",
                  "      ,[EndDate]",
                  "FROM [bi].[amt.StudentProgramAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [StudentSchoolKey]",
              "      ,[ProgramName]",
              "      ,[BeginDate]",
              "      ,[EndDate]",
              "FROM [bi].[amt.StudentProgramAssociation]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "PMS.StudentProgramAssociation"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StudentSchoolKey]",
              "      ,[ProgramName]",
              "      ,[BeginDate]",
              "      ,[EndDate]",
              "FROM [bi].[amt.StudentProgramAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Grade",
        "isHidden": true,
        "columns": [
          {
            "name": "GradingPeriodBeginDate",
            "dataType": "dateTime",
            "sourceColumn": "GradingPeriodBeginDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "GradingPeriod",
            "dataType": "string",
            "sourceColumn": "GradingPeriod",
            "sourceProviderType": "WChar"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "LocalCourseCode",
            "dataType": "string",
            "sourceColumn": "LocalCourseCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "GradeEarned",
            "dataType": "string",
            "sourceColumn": "GradeEarned",
            "sourceProviderType": "WChar"
          },
          {
            "name": "GradeType",
            "dataType": "string",
            "sourceColumn": "GradeType",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ClassPeriodName",
            "dataType": "string",
            "sourceColumn": "ClassPeriodName"
          },
          {
            "name": "BeginDate",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "BeginDate",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "ClassroomIdentificationCode",
            "dataType": "string",
            "sourceColumn": "ClassroomIdentificationCode"
          },
          {
            "name": "SequenceOfCourse",
            "dataType": "int64",
            "sourceColumn": "SequenceOfCourse"
          },
          {
            "type": "calculated",
            "name": "Grade *",
            "dataType": "double",
            "isDataTypeInferred": false,
            "isHidden": true,
            "expression": [
              "",
              "IF([GradeEarned] = \"A\", \"9500\",",
              "IF([GradeEarned] = \"B\", \"8500\",",
              "IF([GradeEarned] = \"C\", \"7500\",",
              "IF([GradeEarned] = \"D\", \"6500\",",
              "IF([GradeEarned] = \"F\", \"5500\",",
              "IF([GradeEarned] = \"I\", \"501\",",
              "IF([GradeEarned] = \"NG\", \"502\",",
              "IF([GradeEarned] = \"IP\", \"503\",",
              "IF([GradeEarned] = \"W\", \"504\",",
              "IF([GradeEarned] = \"WF\", \"505\",",
              "IF([GradeEarned] = \"WP\", \"506\",",
              "IF([GradeEarned] = \"AS\", \"600\",",
              "IF([GradeEarned] = \"E\", \"601\",",
              "IF([GradeEarned] = \"ES\", \"602\",",
              "IF([GradeEarned] = \"LP\", \"603\",",
              "IF([GradeEarned] = \"MS\", \"604\",",
              "IF([GradeEarned] = \"NM\", \"605\",",
              "IF([GradeEarned] = \"S\", \"606\",",
              "IF([GradeEarned] = \"S-\", \"607\",",
              "IF([GradeEarned] = \"U\", \"608\",",
              "IF([GradeEarned] = \"59*\", \"609\",",
              "IF([GradeEarned] = \"CW\", \"610\",",
              "IF([GradeEarned] = \"DEV\", \"611\",",
              "IF([GradeEarned] = \"EME\", \"612\",",
              "IF([GradeEarned] = \"EX\", \"613\",",
              "IF([GradeEarned] = \"EXE\", \"614\",",
              "IF([GradeEarned] = \"IEV\", \"615\",",
              "IF([GradeEarned] = \"N\", \"616\",",
              "IF([GradeEarned] = \"P\", \"617\",",
              "IF([GradeEarned] = \"PRO\", \"618\",",
              "IF([GradeEarned] = \"RG*\", \"619\",",
              "IF([GradeEarned] = \"S+\", \"620\",",
              "IF([GradeEarned] = \"T\", \"621\",",
              "IF(VALUE([GradeEarned]) = -59, \"622\",",
              "IF([GradeEarned] = \"AP\", \"623\",",
              "[GradeEarned]",
              ")))))))))))))))))))))))))))))))))))"
            ]
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyId"
          },
          {
            "name": "SectionBeginDate",
            "dataType": "dateTime",
            "sourceColumn": "SectionBeginDate",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "SectionEndDate",
            "dataType": "dateTime",
            "sourceColumn": "SectionEndDate"
          },
          {
            "name": "Subject",
            "dataType": "string",
            "sourceColumn": "Subject"
          },
          {
            "name": "GradingPeriodKey",
            "dataType": "string",
            "sourceColumn": "GradingPeriodKey"
          },
          {
            "name": "SectionKey",
            "dataType": "string",
            "sourceColumn": "SectionKey"
          },
          {
            "name": "StudentSectionKey",
            "dataType": "string",
            "sourceColumn": "StudentSectionKey"
          },
          {
            "name": "StudentSchoolKey",
            "dataType": "string",
            "sourceColumn": "StudentUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SchoolKey",
            "dataType": "string",
            "sourceColumn": "SchoolKey"
          }
        ],
        "partitions": [
          {
            "name": "uniformGrade",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT BeginDate,",
                "ClassPeriodName,",
                "ClassroomIdentificationCode,",
                "GradeEarned,",
                "GradeType,",
                "GradingPeriod,",
                "GradingPeriodBeginDate,",
                "LocalCourseCode,",
                "LocalEducationAgencyId,",
                "SchoolKey,",
                "SchoolYear,",
                "SectionKey,",
                "SectionBeginDate,",
                "SectionEndDate,",
                "SequenceOfCourse,",
                "StudentUSI,",
                "Subject,",
                "GradingPeriodKey,",
                "StudentSectionKey",
                "",
                "FROM [bi].[amt.Grade]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT BeginDate,",
                  "ClassPeriodName,",
                  "ClassroomIdentificationCode,",
                  "GradeEarned,",
                  "GradeType,",
                  "GradingPeriod,",
                  "GradingPeriodBeginDate,",
                  "LocalCourseCode,",
                  "LocalEducationAgencyId,",
                  "SchoolKey,",
                  "SchoolYear,",
                  "SectionKey,",
                  "SectionBeginDate,",
                  "SectionEndDate,",
                  "SequenceOfCourse,",
                  "StudentUSI,",
                  "Subject,",
                  "GradingPeriodKey,",
                  "StudentSectionKey",
                  "",
                  "FROM [bi].[amt.Grade]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT BeginDate,",
              "ClassPeriodName,",
              "ClassroomIdentificationCode,",
              "GradeEarned,",
              "GradeType,",
              "GradingPeriod,",
              "GradingPeriodBeginDate,",
              "LocalCourseCode,",
              "LocalEducationAgencyId,",
              "SchoolKey,",
              "SchoolYear,",
              "SectionKey,",
              "SectionBeginDate,",
              "SectionEndDate,",
              "SequenceOfCourse,",
              "StudentUSI,",
              "Subject,",
              "GradingPeriodKey,",
              "StudentSectionKey",
              "",
              "FROM [bi].[amt.Grade]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.Grade"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT BeginDate,",
              "ClassPeriodName,",
              "ClassroomIdentificationCode,",
              "GradeEarned,",
              "GradeType,",
              "GradingPeriod,",
              "GradingPeriodBeginDate,",
              "LocalCourseCode,",
              "LocalEducationAgencyId,",
              "SchoolKey,",
              "SchoolYear,",
              "SectionKey,",
              "SectionBeginDate,",
              "SectionEndDate,",
              "SequenceOfCourse,",
              "StudentUSI,",
              "Subject,",
              "GradingPeriodKey,",
              "StudentSectionKey",
              "",
              "FROM [bi].[amt.Grade]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentCourseCurrent",
        "columns": [
          {
            "type": "calculated",
            "name": "Subject",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "LOOKUPVALUE (",
              "    Grade[Subject],",
              "    'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "    Grade[SchoolYear], StudentCourseCurrent[SchoolYear],",
              "    Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "    Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "    Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "    Grade[LocalEducationAgencyId], StudentCourseCurrent[LocalEducationAgencyId]",
              ")",
              "/*",
              "IF(MID([LocalCourseCode],11,4) IN {\"5010\"}, \"English Language Arts\",",
              "IF(MID([LocalCourseCode],11,4) IN {\"5012\"}, \"Mathematics\",",
              "IF(MID([LocalCourseCode],11,2) IN {\"10\"}, \"English Language Arts\",",
              "IF(MID([LocalCourseCode],11,2) IN {\"12\"}, \"Mathematics\"",
              ")",
              "",
              ")))*/"
            ]
          },
          {
            "type": "calculated",
            "name": "T1",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "LOOKUPVALUE (",
              "    Grade[Grade *],",
              "    Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "    Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "    'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "    Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "    Grade[GradeType], \"Grading Period\",",
              "    Grade[GradingPeriod], \"First Nine Weeks\",",
              "    Grade[Subject], StudentCourseCurrent[Subject]",
              ")",
              "/*LOOKUPVALUE(Grade[Grade *], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[Term],StudentCourseCurrent[Term],",
              "                            Grade[GradeType],\"Grading Period\",",
              "                            Grade[GradingPeriod], \"First Nine Weeks\",",
              "                            Grade[Subject],StudentCourseCurrent[Subject]",
              "           )*/"
            ]
          },
          {
            "type": "calculated",
            "name": "T2",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE (",
              "    Grade[Grade *],",
              "    Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "    Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "    'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "    Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "    Grade[GradeType], \"Grading Period\",",
              "    Grade[GradingPeriod], \"Second Nine Weeks\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "S1",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE (",
              "    Grade[Grade *],",
              "    Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "    Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "    'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "    Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "    Grade[GradeType], \"Semester\",",
              "    Grade[GradingPeriod], \"First Semester\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "T3",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE (",
              "    Grade[Grade *],",
              "    Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "    Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "    'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "    Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "    Grade[GradeType], \"Grading Period\",",
              "    Grade[GradingPeriod], \"Third Nine Weeks\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "T4",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE (",
              "    Grade[Grade *],",
              "    Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "    Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "    'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "    Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "    Grade[GradeType], \"Grading Period\",",
              "    Grade[GradingPeriod], \"Fourth Nine Weeks\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "S2",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE (",
              "    Grade[Grade *],",
              "    Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "    Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "    'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "    Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "    Grade[GradeType], \"Semester\",",
              "    Grade[GradingPeriod], \"Second Semester\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "FIN *",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "",
              "VAR CountValue =",
              "     (",
              "        4 - ISBLANK ( [T1] )",
              "            - ISBLANK ( [T2] )",
              "            - ISBLANK ( [T3] )",
              "            - ISBLANK ( [T4] )",
              "    )",
              "VAR CountValueSemester =",
              "     (",
              "        2 - ISBLANK ( [S1] )",
              "            - ISBLANK ( [S2] )",
              "    )",
              "RETURN",
              "    IF (",
              "        LOOKUPVALUE (",
              "            Grade[Grade *],",
              "            Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "            Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "            'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "            Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "            Grade[GradingPeriod], \"End of Year\"",
              "        )",
              "            = BLANK (),",
              "        IF (",
              "            CountValue = 0",
              "                && CountValueSemester = 0,",
              "            BLANK (),",
              "            IF (",
              "                CountValue = 0,",
              "                ROUND ( ( VALUE ( [S1] ) + VALUE ( [S2] ) ) / CountValueSemester, 2 ),",
              "                IF (",
              "                    VALUE ( [T1] ) = 501",
              "                        || VALUE ( [T2] ) = 501",
              "                        || VALUE ( [T3] ) = 501",
              "                        || VALUE ( [T4] ) = 501",
              "                        || VALUE ( [S1] ) = 501",
              "                        || VALUE ( [S2] ) = 501,",
              "                    501,",
              "                    IF (",
              "                        VALUE ( [T1] ) = 502",
              "                            || VALUE ( [T2] ) = 502",
              "                            || VALUE ( [T3] ) = 502",
              "                            || VALUE ( [T4] ) = 502",
              "                            || VALUE ( [S1] ) = 502",
              "                            || VALUE ( [S2] ) = 502,",
              "                        501,",
              "                        ROUND (",
              "                             (",
              "                                VALUE ( [T1] ) + VALUE ( [T2] )",
              "                                    + VALUE ( [T3] )",
              "                                    + VALUE ( [T4] )",
              "                            ) / CountValue,",
              "                            2",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        ),",
              "        LOOKUPVALUE (",
              "            Grade[Grade *],",
              "            Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "            Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "            'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "            Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "            Grade[GradingPeriod], \"End of Year\"",
              "        )",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "FIN",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "",
              "IF([FIN *] = 9500,\"A\",",
              "IF([FIN *] = 8500,\"B\",",
              "IF([FIN *] = 7500,\"C\",",
              "IF([FIN *] = 6500,\"D\",",
              "IF([FIN *] = 5500,\"F\",",
              "IF([FIN *] = 501,\"I\",",
              "IF([FIN *] = 502,\"NG\",",
              "IF([FIN *] = 503, \"IP\",",
              "IF([FIN *] = 504, \"W\",",
              "IF([FIN *] = 505, \"WF\",",
              "IF([FIN *] = 506, \"WP\",",
              "IF([FIN *] = 600, \"AS\",",
              "IF([FIN *] = 601,\"E\", ",
              "IF([FIN *] = 602, \"ES\", ",
              "IF([FIN *] = 603, \"LP\",",
              "IF([FIN *] = 604, \"MS\",",
              "IF([FIN *] = 605, \"NM\",",
              "IF([FIN *] = 606, \"S\",",
              "IF([FIN *] = 607, \"S-\",",
              "IF([FIN *] = 608, \"U\",",
              "",
              "FORMAT([FIN *],\"General number\"",
              ")))))))))))))))))))))"
            ]
          },
          {
            "type": "calculated",
            "name": "SectionEndDate",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "LOOKUPVALUE (",
              "    Grade[SectionEndDate],",
              "    'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "    Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "    Grade[SchoolYear], StudentCourseCurrent[SchoolYear],",
              "    Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "    Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "    Grade[LocalEducationAgencyId], StudentCourseCurrent[LocalEducationAgencyId]",
              ")"
            ],
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "SchoolYear",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "Grade[SchoolYear]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "LocalCourseCode",
            "dataType": "string",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "Grade[LocalCourseCode]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "Grade[LocalEducationAgencyId]"
          },
          {
            "type": "calculated",
            "name": "Term1",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "LOOKUPVALUE (",
              "    Grade[GradeEarned],",
              "    Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "    Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "    'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "    Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "    Grade[GradeType], \"Grading Period\",",
              "    Grade[GradingPeriod], \"First Nine Weeks\",",
              "    Grade[Subject], StudentCourseCurrent[Subject]",
              ")",
              "",
              "/*LOOKUPVALUE(Grade[GradeEarned], Grade[LocalCourseCode],StudentCourseCurrent[LocalCourseCode],",
              "                            Grade[UniqueSectionCode],StudentCourseCurrent[UniqueSectionCode],",
              "                            Grade[SectionBeginDate],StudentCourseCurrent[SectionBeginDate],",
              "                            Grade[StudentUSI], StudentCourseCurrent[StudentUSI],",
              "                            Grade[Term],StudentCourseCurrent[Term],",
              "                            Grade[GradeType],\"Grading Period\",",
              "                            Grade[GradingPeriod], \"First Nine Weeks\",",
              "                            Grade[Subject],StudentCourseCurrent[Subject]",
              "           )*/"
            ]
          },
          {
            "type": "calculated",
            "name": "Term2",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE (",
              "    Grade[GradeEarned],",
              "    Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "    Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "    'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "    Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "    Grade[GradeType], \"Grading Period\",",
              "    Grade[GradingPeriod], \"Second Nine Weeks\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Sem1",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE (",
              "    Grade[GradeEarned],",
              "    Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "    Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "    'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "    Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "    Grade[GradeType], \"Semester\",",
              "    Grade[GradingPeriod], \"First Semester\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Term3",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE (",
              "    Grade[GradeEarned],",
              "    Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "    Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "    'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "    Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "    Grade[GradeType], \"Grading Period\",",
              "    Grade[GradingPeriod], \"Third Nine Weeks\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Term4",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE (",
              "    Grade[GradeEarned],",
              "    Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "    Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "    'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "    Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "    Grade[GradeType], \"Grading Period\",",
              "    Grade[GradingPeriod], \"Fourth Nine Weeks\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Sem2",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE (",
              "    Grade[GradeEarned],",
              "    Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "    Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "    'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "    Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "    Grade[GradeType], \"Semester\",",
              "    Grade[GradingPeriod], \"Second Semester\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "FINAL",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "LOOKUPVALUE (",
              "    Grade[GradeEarned],",
              "    Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "    Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "    'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "    Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "    Grade[GradeType], \"Final\",",
              "    Grade[GradingPeriod], \"End of Year\"",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Grade \"F\" Numeric",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR CountValue =",
              "     (",
              "        4 - ISBLANK ( [T1] )",
              "            - ISBLANK ( [T2] )",
              "            - ISBLANK ( [T3] )",
              "            - ISBLANK ( [T4] )",
              "    )",
              "VAR CountValueSemester =",
              "     (",
              "        2 - ISBLANK ( [S1] )",
              "            - ISBLANK ( [S2] )",
              "    )",
              "RETURN",
              "    IF (",
              "        LOOKUPVALUE (",
              "            Grade[Grade *],",
              "            Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "            Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "            'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "            Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "            Grade[GradingPeriod], \"End of Year\"",
              "        )",
              "            = BLANK (),",
              "        IF (",
              "            CountValue = 0",
              "                && CountValueSemester = 0,",
              "            BLANK (),",
              "            IF (",
              "                CountValueSemester > 0",
              "                    && VALUE ( [S1] ) <= 100",
              "                    && VALUE ( [S2] ) <= 100,",
              "                ROUND ( ( VALUE ( [S1] ) + VALUE ( [S2] ) ) / CountValueSemester, 2 ),",
              "                IF (",
              "                     (",
              "                        VALUE ( [S1] )",
              "                            IN { 501, 5500, 505, 608, 605, 502, 609, 615, 622 }",
              "                                || VALUE ( [S2] ) IN { 501, 5500, 505, 608, 605, 502, 609, 615, 622 }",
              "                    )",
              "                        && CountValueSemester > 0,",
              "                    55,",
              "                    IF (",
              "                        [S1] = BLANK ()",
              "                            && [S2] = BLANK ()",
              "                            && ( [T1]",
              "                            IN { 501, 5500, 505, 608, 605, 502, 609, 615, 622 }",
              "                            || [T2]",
              "                            IN { 501, 5500, 505, 608, 605, 502, 609, 615, 622 }",
              "                            || [T3]",
              "                            IN { 501, 5500, 505, 608, 605, 502, 609, 615, 622 }",
              "                            || [T4] IN { 501, 5500, 505, 608, 605, 502, 609, 615, 622 } ),",
              "                        55,",
              "                        ROUND (",
              "                             (",
              "                                VALUE ( [T1] ) + VALUE ( [T2] )",
              "                                    + VALUE ( [T3] )",
              "                                    + VALUE ( [T4] )",
              "                            ) / CountValue,",
              "                            2",
              "                        )",
              "                    )",
              "                )",
              "            )",
              "        ),",
              "        LOOKUPVALUE (",
              "            Grade[Grade *],",
              "            Grade[LocalCourseCode], StudentCourseCurrent[LocalCourseCode],",
              "            Grade[SectionBeginDate], StudentCourseCurrent[SectionBeginDate],",
              "            'Grade'[StudentSchoolKey], 'StudentCourseCurrent'[StudentSchoolKey],",
              "            Grade[GradingPeriodKey], StudentCourseCurrent[GradingPeriodKey],",
              "            Grade[GradingPeriod], \"End of Year\"",
              "        )",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Grade \"F\"",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF (",
              "    [FINAL] <> BLANK (),",
              "    [FINAL],",
              "    IF (",
              "        [Sem2] <> BLANK ()",
              "            && [Sem1] = BLANK ()",
              "            && [Term1] = BLANK ()",
              "            && [Term2] = BLANK (),",
              "        [Sem2],",
              "        IF (",
              "            [Sem1] <> BLANK ()",
              "                && [Sem2] = BLANK ()",
              "                && [Term3] = BLANK ()",
              "                && [Term4] = BLANK (),",
              "            [Sem1],",
              "            IF (",
              "                [Sem2] = BLANK ()",
              "                    && [Sem1] = BLANK (),",
              "                IF (",
              "                    [Term1]",
              "                        IN { \"F\", \"WF\", \"U\", \"NM\", \"I\", \"NG\", \"59*\", \"IEV\" }",
              "                        || [Term2]",
              "                        IN { \"F\", \"WF\", \"U\", \"NM\", \"I\", \"NG\", \"59*\", \"IEV\" }",
              "                        || [Term3]",
              "                        IN { \"F\", \"WF\", \"U\", \"NM\", \"I\", \"NG\", \"59*\", \"IEV\" }",
              "                        || [Term4] IN { \"F\", \"WF\", \"U\", \"NM\", \"I\", \"NG\", \"59*\", \"IEV\" },",
              "                    \"F\",",
              "                    BLANK ()",
              "                ),",
              "                IF (",
              "                    [Sem1] <> BLANK ()",
              "                        || [Sem2] <> BLANK (),",
              "                    IF (",
              "                        [Sem1]",
              "                            IN { \"F\", \"WF\", \"U\", \"NM\", \"I\", \"NG\", \"59*\", \"IEV\" }",
              "                            || [Sem2] IN { \"F\", \"WF\", \"U\", \"NM\", \"I\", \"NG\", \"59*\", \"IEV\" },",
              "                        \"F\",",
              "                        BLANK ()",
              "                    ),",
              "                    BLANK ()",
              "                )",
              "            )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Flag Fail ELA/Math",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF (",
              "    [Grade \"F\"]",
              "        IN { \"F\", \"WF\", \"U\", \"NM\", \"NG\", \"I\", \"59*\", \"IEV\" }",
              "            || [Grade \"F\" Numeric]",
              "                IN { 55, 5500, 505, 608, 605, 502, 501 }",
              "                    || (",
              "                        [Grade \"F\" Numeric] < 60",
              "                            && [FINAL] <> BLANK ()",
              "                    ),",
              "    \"yes\",",
              "    BLANK ()",
              ")"
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "SectionBeginDate",
            "dataType": "dateTime",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "[SectionBeginDate]",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "GradingPeriodKey",
            "dataType": "string",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "Grade[GradingPeriodKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "StudentSectionKey",
            "dataType": "string",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "Grade[StudentSectionKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "StudentSchoolKey",
            "dataType": "string",
            "isNameInferred": false,
            "isDataTypeInferred": true,
            "sourceColumn": "Grade[StudentSchoolKey]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "GROUPBY(Grade",
                ",'Grade'[StudentSchoolKey]",
                ",Grade[SchoolYear]",
                ",Grade[LocalCourseCode]",
                ",Grade[LocalEducationAgencyId]",
                ",Grade[StudentSectionKey]",
                ",Grade[GradingPeriodKey],\"SectionBeginDate\", MAXX(CURRENTGROUP(),Grade[SectionBeginDate])",
                ")",
                ""
              ]
            }
          }
        ]
      },
      {
        "name": "StudentAssessmentPerformanceLevel",
        "isHidden": true,
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AdministrationDate",
            "dataType": "dateTime",
            "sourceColumn": "AdministrationDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBTimeStamp",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "GradeLevel",
            "dataType": "string",
            "sourceColumn": "GradeLevel",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AcademicSubject",
            "dataType": "string",
            "sourceColumn": "AcademicSubject",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AssessmentReportingMethodTypeId",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "AssessmentReportingMethodTypeId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "AssessmentTitle",
            "dataType": "string",
            "sourceColumn": "AssessmentTitle",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Result",
            "dataType": "string",
            "sourceColumn": "Result",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Version",
            "dataType": "int64",
            "sourceColumn": "Version",
            "sourceProviderType": "Integer"
          },
          {
            "name": "AssessmentKey",
            "dataType": "string",
            "sourceColumn": "AssessmentKey"
          },
          {
            "name": "StudentAssessmentKey",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentKey"
          },
          {
            "name": "StudentSchoolKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolKey"
          }
        ],
        "partitions": [
          {
            "name": "StudentAssessmentPerformanceLevel",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT AssessmentKey,",
                "[AssessmentIdentifier]",
                "      ,[StudentAssessmentIdentifier]",
                "      ,StudentAssessmentKey",
                "      ,[StudentSchoolKey]",
                "      ,[AdministrationDate]",
                "      ,[GradeLevel]",
                "      ,[AcademicSubject]",
                "      ,[AssessmentReportingMethodTypeId]",
                "      ,[AssessmentTitle]",
                "      ,[Result]",
                "      ,[Version]",
                "  FROM [bi].[amt.StudentAssessmentPerformanceLevel]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT AssessmentKey,",
                  "[AssessmentIdentifier]",
                  "      ,[StudentAssessmentIdentifier]",
                  "      ,StudentAssessmentKey",
                  "      ,[StudentSchoolKey]",
                  "      ,[AdministrationDate]",
                  "      ,[GradeLevel]",
                  "      ,[AcademicSubject]",
                  "      ,[AssessmentReportingMethodTypeId]",
                  "      ,[AssessmentTitle]",
                  "      ,[Result]",
                  "      ,[Version]",
                  "  FROM [bi].[amt.StudentAssessmentPerformanceLevel]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT AssessmentKey,",
              "[AssessmentIdentifier]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,StudentAssessmentKey",
              "      ,[StudentSchoolKey]",
              "      ,[AdministrationDate]",
              "      ,[GradeLevel]",
              "      ,[AcademicSubject]",
              "      ,[AssessmentReportingMethodTypeId]",
              "      ,[AssessmentTitle]",
              "      ,[Result]",
              "      ,[Version]",
              "  FROM [bi].[amt.StudentAssessmentPerformanceLevel]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.StudentAssessmentPerformanceLevel"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT AssessmentKey,",
              "[AssessmentIdentifier]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,StudentAssessmentKey",
              "      ,[StudentSchoolKey]",
              "      ,[AdministrationDate]",
              "      ,[GradeLevel]",
              "      ,[AcademicSubject]",
              "      ,[AssessmentReportingMethodTypeId]",
              "      ,[AssessmentTitle]",
              "      ,[Result]",
              "      ,[Version]",
              "  FROM [bi].[amt.StudentAssessmentPerformanceLevel]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentAssessmentScoreResult",
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AdministrationDate",
            "dataType": "dateTime",
            "sourceColumn": "AdministrationDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBTimeStamp",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "GradeLevel",
            "dataType": "string",
            "sourceColumn": "GradeLevel",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AcademicSubject",
            "dataType": "string",
            "sourceColumn": "AcademicSubject",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AssessmentTitle",
            "dataType": "string",
            "sourceColumn": "AssessmentTitle",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Result",
            "dataType": "int64",
            "sourceColumn": "Result",
            "formatString": "0",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Version",
            "dataType": "int64",
            "sourceColumn": "Version",
            "sourceProviderType": "Integer"
          },
          {
            "type": "calculated",
            "name": "AchievementLevel",
            "dataType": "int64",
            "isDataTypeInferred": false,
            "expression": [
              "",
              "LOOKUPVALUE (",
              "    StudentAssessmentPerformanceLevel[Result],",
              "    StudentAssessmentPerformanceLevel[StudentAssessmentIdentifier], StudentAssessmentScoreResult[StudentAssessmentIdentifier],",
              "    StudentAssessmentPerformanceLevel[AcademicSubject], StudentAssessmentScoreResult[AcademicSubject],",
              "    'StudentAssessmentPerformanceLevel'[StudentSchoolKey], 'StudentAssessmentScoreResult'[StudentSchoolKey]",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Learning Gain Level",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "",
              "VAR FilteredTable_LearningGains =",
              "    FILTER (",
              "        'LearningGains',",
              "        VALUE ( StudentAssessmentScoreResult[Result] ) >= VALUE ( 'LearningGains'[Min] )",
              "            && VALUE ( StudentAssessmentScoreResult[Result] ) <= VALUE ( 'LearningGains'[Max] )",
              "            && StudentAssessmentScoreResult[GradeLevel] = 'LearningGains'[Grade Level]",
              "            && StudentAssessmentScoreResult[AssessmentTitle] = 'LearningGains'[AssessmentTitle]",
              "            && 'LearningGains'[LearningGainLevel] <> BLANK ()",
              "    )",
              "VAR FilteredTable_LearningGainsAlgebraGeometry =",
              "    FILTER (",
              "        'LearningGains',",
              "        VALUE ( StudentAssessmentScoreResult[Result] ) >= VALUE ( 'LearningGains'[Min] )",
              "            && VALUE ( StudentAssessmentScoreResult[Result] ) <= VALUE ( 'LearningGains'[Max] )",
              "            && StudentAssessmentScoreResult[AssessmentTitle] = 'LearningGains'[AssessmentTitle]",
              "            && 'LearningGains'[LearningGainLevel] <> BLANK ()",
              "    )",
              "VAR LearningGain =",
              "    MAXX ( FilteredTable_LearningGains, 'LearningGains'[LearningGainLevel] )",
              "VAR LearningGainAlgebraGeometry =",
              "    MAXX (",
              "        FilteredTable_LearningGainsAlgebraGeometry,",
              "        'LearningGains'[LearningGainLevel]",
              "    )",
              "RETURN",
              "    IF (",
              "        CONTAINSSTRING ( StudentAssessmentScoreResult[AssessmentTitle], \"Algebra\" )",
              "            = TRUE ()",
              "            || CONTAINSSTRING ( StudentAssessmentScoreResult[AssessmentTitle], \"Geometry\" )",
              "                = TRUE (),",
              "        LearningGainAlgebraGeometry,",
              "        LearningGain",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "Quartile",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF (",
              "    VALUE ( [Result] )",
              "        <= PERCENTILEX.INC ( StudentAssessmentScoreResult, VALUE ( [Result] ), 0.25 ),",
              "    1,",
              "    IF (",
              "        VALUE ( [Result] )",
              "            > PERCENTILEX.INC ( StudentAssessmentScoreResult, VALUE ( [Result] ), 0.25 )",
              "            && VALUE ( [Result] )",
              "                <= PERCENTILEX.INC ( StudentAssessmentScoreResult, VALUE ( [Result] ), 0.50 ),",
              "        2,",
              "        IF (",
              "            VALUE ( [Result] )",
              "                > PERCENTILEX.INC ( StudentAssessmentScoreResult, VALUE ( [Result] ), 0.50 )",
              "                && VALUE ( [Result] )",
              "                    <= PERCENTILEX.INC ( StudentAssessmentScoreResult, VALUE ( [Result] ), 0.75 ),",
              "            3,",
              "            IF (",
              "                VALUE ( [Result] )",
              "                    > PERCENTILEX.INC ( StudentAssessmentScoreResult, VALUE ( [Result] ), 0.75 ),",
              "                4,",
              "                BLANK ()",
              "            )",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "StateAssessmentTitle",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " \"Assessment \" &  [AcademicSubject]",
              "/*IF (",
              "    [AssessmentTitle]",
              "        IN {",
              "        \"FSA Mathematics\",",
              "        \"FSA Algebra I\",",
              "        \"FSA Algebra II\",",
              "        \"FSA Geometry\",",
              "        \"FA1 Algebra 1\",",
              "        \"FA1 Mathematics\",",
              "        \"FA1 Geometry\"",
              "    }",
              "        && [AcademicSubject] IN { \"Mathematics\" },",
              "    \"State Assessment Math\",",
              "    IF (",
              "        [AssessmentTitle]",
              "            IN { \"FSA ELA Reading\", \"FA1 ELA\" }",
              "            && [AcademicSubject] IN { \"Reading\", \"English Language Arts\" },",
              "        \"State Assessment ELA\",",
              "        IF (",
              "            [AssessmentTitle]",
              "                IN { \"FC2\", \"State Assessment\", \"EB1\", \"EOC Biology 1\" }",
              "                && [AcademicSubject] IN { \"Science\" },",
              "            \"State Assessment Science\",",
              "            IF (",
              "                [AssessmentTitle]",
              "                    IN { \"EAH\", \"ECS\", \"EOC Civics\", \"EOC US History\" }",
              "                    && [AcademicSubject] IN { \"Social Studies\", \"Social Sciences and History\" },",
              "                \"State Assessment Social Studies\",",
              "                BLANK ()",
              "            )",
              "        )",
              "    )",
              ")*/"
            ]
          },
          {
            "type": "calculated",
            "name": "LearningGainLevel",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF (",
              "    CONTAINSSTRING ( StudentAssessmentScoreResult[AssessmentTitle], \"Algebra\" )",
              "        = TRUE ()",
              "        || CONTAINSSTRING ( StudentAssessmentScoreResult[AssessmentTitle], \"Geometry\" )",
              "            = TRUE (),",
              "    CALCULATE (",
              "        VALUES ( 'LearningGains'[LearningGainLevel] ),",
              "        FILTER (",
              "            'LearningGains',",
              "            VALUE ( StudentAssessmentScoreResult[Result] ) >= VALUE ( 'LearningGains'[Min] )",
              "                && VALUE ( StudentAssessmentScoreResult[Result] ) <= VALUE ( 'LearningGains'[Max] )",
              "                && 'LearningGains'[LearningGainLevel] <> BLANK ()",
              "                && StudentAssessmentScoreResult[AssessmentTitle] = 'LearningGains'[AssessmentTitle]",
              "        )",
              "    ),",
              "    CALCULATE (",
              "        VALUES ( 'LearningGains'[LearningGainLevel] ),",
              "        FILTER (",
              "            'LearningGains',",
              "            VALUE ( StudentAssessmentScoreResult[Result] ) >= VALUE ( 'LearningGains'[Min] )",
              "                && VALUE ( StudentAssessmentScoreResult[Result] ) <= VALUE ( 'LearningGains'[Max] )",
              "                && 'LearningGains'[LearningGainLevel] <> BLANK ()",
              "                && StudentAssessmentScoreResult[AssessmentTitle] = 'LearningGains'[AssessmentTitle]",
              "                && StudentAssessmentScoreResult[GradeLevel] = 'LearningGains'[Grade Level]",
              "        )",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "[AssessmentIdentifier] & \"^\" & [StudentSchoolKey]"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Namespace"
          },
          {
            "type": "calculated",
            "name": "Level Min at 0%",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "IF (",
              "    [AchievementLevel] <> BLANK (),",
              "    IF (",
              "        CONTAINSSTRING ( StudentAssessmentScoreResult[AssessmentTitle], \"Algebra\" )",
              "            = TRUE ()",
              "            || CONTAINSSTRING ( StudentAssessmentScoreResult[AssessmentTitle], \"Geometry\" )",
              "                = TRUE (),",
              "        LOOKUPVALUE (",
              "            'LearningGains'[Min],",
              "            'LearningGains'[AssessmentTitle], StudentAssessmentScoreResult[AssessmentTitle],",
              "            'LearningGains'[SubLevel], \"Overall\",",
              "            'LearningGains'[ScoreLevel], StudentAssessmentScoreResult[AchievementLevel]",
              "        ),",
              "        LOOKUPVALUE (",
              "            'LearningGains'[Min],",
              "            'LearningGains'[AssessmentTitle], StudentAssessmentScoreResult[AssessmentTitle],",
              "            'LearningGains'[Grade Level], StudentAssessmentScoreResult[GradeLevel],",
              "            'LearningGains'[SubLevel], \"Overall\",",
              "            'LearningGains'[ScoreLevel], StudentAssessmentScoreResult[AchievementLevel]",
              "        )",
              "    ),",
              "    BLANK ()",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Level Max at 100%",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "IF (",
              "    [AchievementLevel] <> BLANK (),",
              "    IF (",
              "        CONTAINSSTRING ( StudentAssessmentScoreResult[AssessmentTitle], \"Algebra\" )",
              "            = TRUE ()",
              "            || CONTAINSSTRING ( StudentAssessmentScoreResult[AssessmentTitle], \"Geometry\" )",
              "                = TRUE (),",
              "        LOOKUPVALUE (",
              "            'LearningGains'[Max],",
              "            'LearningGains'[AssessmentTitle], StudentAssessmentScoreResult[AssessmentTitle],",
              "            'LearningGains'[SubLevel], \"Overall\",",
              "            'LearningGains'[ScoreLevel], StudentAssessmentScoreResult[AchievementLevel]",
              "        ) + 1,",
              "        LOOKUPVALUE (",
              "            'LearningGains'[Max],",
              "            'LearningGains'[AssessmentTitle], StudentAssessmentScoreResult[AssessmentTitle],",
              "            'LearningGains'[Grade Level], StudentAssessmentScoreResult[GradeLevel],",
              "            'LearningGains'[SubLevel], \"Overall\",",
              "            'LearningGains'[ScoreLevel], StudentAssessmentScoreResult[AchievementLevel]",
              "        ) + 1",
              "    ),",
              "    BLANK ()",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Achievement Level %",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "VAR LevelMin =",
              "    IF (",
              "        CONTAINSSTRING ( StudentAssessmentScoreResult[AssessmentTitle], \"Algebra\" )",
              "            = TRUE ()",
              "            || CONTAINSSTRING ( StudentAssessmentScoreResult[AssessmentTitle], \"Geometry\" )",
              "                = TRUE (),",
              "        LOOKUPVALUE (",
              "            'LearningGains'[Min],",
              "            'LearningGains'[AssessmentTitle], StudentAssessmentScoreResult[AssessmentTitle],",
              "            'LearningGains'[SubLevel], \"Overall\",",
              "            'LearningGains'[ScoreLevel], StudentAssessmentScoreResult[AchievementLevel]",
              "        ),",
              "        LOOKUPVALUE (",
              "            'LearningGains'[Min],",
              "            'LearningGains'[AssessmentTitle], StudentAssessmentScoreResult[AssessmentTitle],",
              "            'LearningGains'[Grade Level], StudentAssessmentScoreResult[GradeLevel],",
              "            'LearningGains'[SubLevel], \"Overall\",",
              "            'LearningGains'[ScoreLevel], StudentAssessmentScoreResult[AchievementLevel]",
              "        )",
              "    )",
              "VAR LevelMax =",
              "    IF (",
              "        CONTAINSSTRING ( StudentAssessmentScoreResult[AssessmentTitle], \"Algebra\" )",
              "            = TRUE ()",
              "            || CONTAINSSTRING ( StudentAssessmentScoreResult[AssessmentTitle], \"Geometry\" )",
              "                = TRUE (),",
              "        LOOKUPVALUE (",
              "            'LearningGains'[Max],",
              "            'LearningGains'[AssessmentTitle], StudentAssessmentScoreResult[AssessmentTitle],",
              "            'LearningGains'[SubLevel], \"Overall\",",
              "            'LearningGains'[ScoreLevel], StudentAssessmentScoreResult[AchievementLevel]",
              "        ) + 1,",
              "        LOOKUPVALUE (",
              "            'LearningGains'[Max],",
              "            'LearningGains'[AssessmentTitle], StudentAssessmentScoreResult[AssessmentTitle],",
              "            'LearningGains'[Grade Level], StudentAssessmentScoreResult[GradeLevel],",
              "            'LearningGains'[SubLevel], \"Overall\",",
              "            'LearningGains'[ScoreLevel], StudentAssessmentScoreResult[AchievementLevel]",
              "        ) + 1",
              "    )",
              "VAR point_100_percent = LevelMax - LevelMin",
              "VAR point_Result = [Result] - LevelMin",
              "RETURN",
              "    IF (",
              "        [Level Min at 0%] <> BLANK (),",
              "        [AchievementLevel] + point_Result / point_100_percent,",
              "        BLANK ()",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "SchoolYear",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "IF (",
              "    MONTH ( ( [AdministrationDate] ) ) < 8,",
              "    YEAR ( [AdministrationDate] ),",
              "    IF (",
              "        MONTH ( [AdministrationDate] ) = 8",
              "            && DAY ( [AdministrationDate] ) < 11,",
              "        YEAR ( [AdministrationDate] ),",
              "        YEAR ( [AdministrationDate] ) + 1",
              "    )",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "KeyStudentAssessment",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "[AcademicSubject] & \"^\" & [AssessmentIdentifier] & \"^\" & [ReportingMethod] & \"^\" & [StudentSchoolKey] & \"^\" & [AdministrationDate] & \"^\" & [Namespace]"
          },
          {
            "type": "calculated",
            "name": "Current School ID",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "RELATED ( Student[Current School ID] )"
          },
          {
            "type": "calculated",
            "name": "LearningGainLevelString",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF([LearningGainLevel] = 5 , \"Level 5\",",
              "IF([LearningGainLevel] = 4 , \"Level 4\",",
              "IF([LearningGainLevel] = 3 , \"Level 3\",",
              "IF([LearningGainLevel] = 3.1 , \"Level 3 Low\",",
              "IF([LearningGainLevel] = 3.3 , \"Level 3 High\",",
              "IF([LearningGainLevel] = 2.1 , \"Level 2 Low\",",
              "IF([LearningGainLevel] = 2.3 , \"Level 2 High\",",
              "IF([LearningGainLevel] = 1.1 , \"Level 1 Low\",",
              "IF([LearningGainLevel] = 1.2 , \"Level 1 Mid\",",
              "IF([LearningGainLevel] = 1.3 , \"Level 1 High\"",
              "",
              "))))))))))"
            ]
          },
          {
            "name": "AssessmentKey",
            "dataType": "string",
            "sourceColumn": "AssessmentKey"
          },
          {
            "name": "StudentAssessmentKey",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentKey"
          },
          {
            "name": "StudentSchoolKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolKey"
          },
          {
            "name": "ReportingMethod",
            "dataType": "string",
            "sourceColumn": "ReportingMethod"
          }
        ],
        "partitions": [
          {
            "name": "StudentAssessmentScoreResult",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT AssessmentKey,",
                "[AssessmentIdentifier]",
                "      ,[StudentAssessmentIdentifier]",
                "      ,[StudentAssessmentKey]",
                "      ,[StudentSchoolKey]",
                "      ,[AdministrationDate]",
                "      ,[GradeLevel]",
                "      ,[AcademicSubject]",
                "      ,[ReportingMethod]",
                "      ,[AssessmentTitle]",
                "      ,[Result]",
                "      ,[Version]",
                ",Namespace",
                "FROM [bi].[amt.StudentAssessmentScoreResult]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT AssessmentKey,",
                  "[AssessmentIdentifier]",
                  "      ,[StudentAssessmentIdentifier]",
                  "      ,[StudentAssessmentKey]",
                  "      ,[StudentSchoolKey]",
                  "      ,[AdministrationDate]",
                  "      ,[GradeLevel]",
                  "      ,[AcademicSubject]",
                  "      ,[ReportingMethod]",
                  "      ,[AssessmentTitle]",
                  "      ,[Result]",
                  "      ,[Version]",
                  ",Namespace",
                  "FROM [bi].[amt.StudentAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT AssessmentKey,",
              "[AssessmentIdentifier]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentAssessmentKey]",
              "      ,[StudentSchoolKey]",
              "      ,[AdministrationDate]",
              "      ,[GradeLevel]",
              "      ,[AcademicSubject]",
              "      ,[ReportingMethod]",
              "      ,[AssessmentTitle]",
              "      ,[Result]",
              "      ,[Version]",
              ",Namespace",
              "FROM [bi].[amt.StudentAssessmentScoreResult]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.StudentAssessmentScoreResult"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT AssessmentKey,",
              "[AssessmentIdentifier]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentAssessmentKey]",
              "      ,[StudentSchoolKey]",
              "      ,[AdministrationDate]",
              "      ,[GradeLevel]",
              "      ,[AcademicSubject]",
              "      ,[ReportingMethod]",
              "      ,[AssessmentTitle]",
              "      ,[Result]",
              "      ,[Version]",
              ",Namespace",
              "FROM [bi].[amt.StudentAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StaffSectionAssociation",
        "columns": [
          {
            "name": "ClassroomIdentificationCode",
            "dataType": "string",
            "sourceColumn": "ClassroomIdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ClassPeriodName",
            "dataType": "string",
            "sourceColumn": "ClassPeriodName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LocalCourseCode",
            "dataType": "string",
            "sourceColumn": "LocalCourseCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "StaffUSI",
            "dataType": "int64",
            "sourceColumn": "StaffUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ClassroomPosition",
            "dataType": "string",
            "sourceColumn": "ClassroomPosition",
            "sourceProviderType": "WChar"
          },
          {
            "name": "BeginDate",
            "dataType": "dateTime",
            "sourceColumn": "BeginDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "sourceColumn": "EndDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "SectionKey",
            "dataType": "string",
            "sourceColumn": "SectionKey"
          },
          {
            "name": "SchoolKey",
            "dataType": "string",
            "sourceColumn": "SchoolKey"
          }
        ],
        "partitions": [
          {
            "name": "StaffSectionAssociation",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [StaffUSI]",
                "      ,[ClassroomIdentificationCode]",
                "      ,[SchoolKey]",
                "      ,SectionKey",
                "      ,[ClassPeriodName]",
                "      ,[LocalCourseCode]",
                "      ,[SchoolYear]",
                "      ,[Term]",
                "      ,[UniqueSectionCode]",
                "      ,[ClassroomPosition]",
                "      ,[BeginDate]",
                "      ,[EndDate]",
                "      ,[LocalEducationAgencyId]",
                "  FROM [bi].[amt.StaffSectionAssociation]",
                "--WHERE LocalEducationAgencyId = 38"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StaffUSI]",
                  "      ,[ClassroomIdentificationCode]",
                  "      ,[SchoolKey]",
                  "      ,SectionKey",
                  "      ,[ClassPeriodName]",
                  "      ,[LocalCourseCode]",
                  "      ,[SchoolYear]",
                  "      ,[Term]",
                  "      ,[UniqueSectionCode]",
                  "      ,[ClassroomPosition]",
                  "      ,[BeginDate]",
                  "      ,[EndDate]",
                  "      ,[LocalEducationAgencyId]",
                  "  FROM [bi].[amt.StaffSectionAssociation]",
                  "--WHERE LocalEducationAgencyId = 38</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [StaffUSI]",
              "      ,[ClassroomIdentificationCode]",
              "      ,[SchoolKey]",
              "      ,SectionKey",
              "      ,[ClassPeriodName]",
              "      ,[LocalCourseCode]",
              "      ,[SchoolYear]",
              "      ,[Term]",
              "      ,[UniqueSectionCode]",
              "      ,[ClassroomPosition]",
              "      ,[BeginDate]",
              "      ,[EndDate]",
              "      ,[LocalEducationAgencyId]",
              "  FROM [bi].[amt.StaffSectionAssociation]",
              "--WHERE LocalEducationAgencyId = 38"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.StaffSectionAssociation"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [StaffUSI]",
              "      ,[ClassroomIdentificationCode]",
              "      ,[SchoolKey]",
              "      ,SectionKey",
              "      ,[ClassPeriodName]",
              "      ,[LocalCourseCode]",
              "      ,[SchoolYear]",
              "      ,[Term]",
              "      ,[UniqueSectionCode]",
              "      ,[ClassroomPosition]",
              "      ,[BeginDate]",
              "      ,[EndDate]",
              "      ,[LocalEducationAgencyId]",
              "  FROM [bi].[amt.StaffSectionAssociation]",
              "--WHERE LocalEducationAgencyId = 38</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Staff",
        "isHidden": true,
        "columns": [
          {
            "name": "StaffUSI",
            "dataType": "int64",
            "sourceColumn": "StaffUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "StaffUniqueId",
            "dataType": "string",
            "sourceColumn": "StaffUniqueId",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersonalTitlePrefix",
            "dataType": "string",
            "sourceColumn": "PersonalTitlePrefix",
            "sourceProviderType": "WChar"
          },
          {
            "name": "FirstName",
            "dataType": "string",
            "sourceColumn": "FirstName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "MiddleName",
            "dataType": "string",
            "sourceColumn": "MiddleName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LastSurname",
            "dataType": "string",
            "sourceColumn": "LastSurname",
            "sourceProviderType": "WChar"
          },
          {
            "name": "GenerationCodeSuffix",
            "dataType": "string",
            "sourceColumn": "GenerationCodeSuffix",
            "sourceProviderType": "WChar"
          },
          {
            "name": "MaidenName",
            "dataType": "string",
            "sourceColumn": "MaidenName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ElectronicMailAddress",
            "dataType": "string",
            "sourceColumn": "ElectronicMailAddress",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StreetNumberName",
            "dataType": "string",
            "sourceColumn": "StreetNumberName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ApartmentRoomSuiteNumber",
            "dataType": "string",
            "sourceColumn": "ApartmentRoomSuiteNumber",
            "sourceProviderType": "WChar"
          },
          {
            "name": "City",
            "dataType": "string",
            "sourceColumn": "City",
            "sourceProviderType": "WChar"
          },
          {
            "name": "State",
            "dataType": "string",
            "sourceColumn": "State",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PostalCode",
            "dataType": "string",
            "sourceColumn": "PostalCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "SexType",
            "dataType": "string",
            "sourceColumn": "SexType",
            "sourceProviderType": "WChar"
          },
          {
            "name": "BirthDate",
            "dataType": "dateTime",
            "sourceColumn": "BirthDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "RaceType",
            "dataType": "string",
            "sourceColumn": "RaceType",
            "sourceProviderType": "WChar"
          },
          {
            "name": "HispanicLatinoEthnicity",
            "dataType": "boolean",
            "sourceColumn": "HispanicLatinoEthnicity",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "Boolean"
          },
          {
            "name": "HighestCompletedLevelOfEducation",
            "dataType": "string",
            "sourceColumn": "HighestCompletedLevelOfEducation",
            "sourceProviderType": "WChar"
          },
          {
            "name": "YearsOfPriorProfessionalExperience",
            "dataType": "double",
            "sourceColumn": "YearsOfPriorProfessionalExperience",
            "sourceProviderType": "Numeric"
          },
          {
            "name": "YearsOfPriorTeachingExperience",
            "dataType": "double",
            "sourceColumn": "YearsOfPriorTeachingExperience",
            "sourceProviderType": "Numeric"
          },
          {
            "name": "HighlyQualifiedTeacher",
            "dataType": "boolean",
            "sourceColumn": "HighlyQualifiedTeacher",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "Boolean"
          },
          {
            "name": "LoginId",
            "dataType": "string",
            "sourceColumn": "LoginId",
            "sourceProviderType": "WChar"
          },
          {
            "name": "CitizenshipStatusTypeId",
            "dataType": "int64",
            "sourceColumn": "CitizenshipStatusTypeId",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "Staff",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [bi].[amt.Staff].*",
                " FROM [bi].[amt.Staff]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[amt.Staff].*",
                  " FROM [bi].[amt.Staff]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [bi].[amt.Staff].*",
              " FROM [bi].[amt.Staff]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.Staff"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[amt.Staff].*",
              " FROM [bi].[amt.Staff]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StaffEducationOrganizationAssignmentAssociation",
        "isHidden": true,
        "columns": [
          {
            "name": "StaffUSI",
            "dataType": "int64",
            "sourceColumn": "StaffUSI",
            "sourceProviderType": "Integer"
          },
          {
            "name": "School",
            "dataType": "string",
            "sourceColumn": "School",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "District",
            "dataType": "string",
            "sourceColumn": "District",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StaffClassificationType",
            "dataType": "string",
            "sourceColumn": "StaffClassificationType",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StaffClassificationCode",
            "dataType": "string",
            "sourceColumn": "StaffClassificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StaffClassificationShortDescription",
            "dataType": "string",
            "sourceColumn": "StaffClassificationShortDescription",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StaffClassificationDescription",
            "dataType": "string",
            "sourceColumn": "StaffClassificationDescription",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PositionTitle",
            "dataType": "string",
            "sourceColumn": "PositionTitle",
            "sourceProviderType": "WChar"
          },
          {
            "name": "BeginDate",
            "dataType": "dateTime",
            "sourceColumn": "BeginDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "EndDate",
            "dataType": "dateTime",
            "sourceColumn": "EndDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "LoginID",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " LOOKUPVALUE(Staff[LoginId],Staff[StaffUSI],StaffEducationOrganizationAssignmentAssociation[StaffUSI])"
          },
          {
            "name": "SchoolKey",
            "dataType": "string",
            "sourceColumn": "SchoolKey"
          }
        ],
        "partitions": [
          {
            "name": "StaffEducationOrganizationAssignmentAssociation",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [bi].[amt.StaffEducationOrganizationAssignmentAssociation].* ",
                "FROM [bi].[amt.StaffEducationOrganizationAssignmentAssociation]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[amt.StaffEducationOrganizationAssignmentAssociation].* ",
                  "FROM [bi].[amt.StaffEducationOrganizationAssignmentAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [bi].[amt.StaffEducationOrganizationAssignmentAssociation].* ",
              "FROM [bi].[amt.StaffEducationOrganizationAssignmentAssociation]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.StaffEducationOrganizationAssignmentAssociation"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [bi].[amt.StaffEducationOrganizationAssignmentAssociation].* ",
              "FROM [bi].[amt.StaffEducationOrganizationAssignmentAssociation]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Section",
        "columns": [
          {
            "name": "ClassPeriodName",
            "dataType": "string",
            "sourceColumn": "ClassPeriodName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ClassroomIdentificationCode",
            "dataType": "string",
            "sourceColumn": "ClassroomIdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LocalCourseCode",
            "dataType": "string",
            "sourceColumn": "LocalCourseCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "SchoolYear",
            "dataType": "int64",
            "sourceColumn": "SchoolYear",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyId"
          },
          {
            "name": "SectionKey",
            "dataType": "string",
            "sourceColumn": "SectionKey"
          },
          {
            "name": "SchoolKey",
            "dataType": "string",
            "sourceColumn": "SchoolKey"
          }
        ],
        "partitions": [
          {
            "name": "Section",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT distinct [SchoolKey]",
                "      ,SectionKey",
                "      ,[ClassPeriodName]",
                "      ,[ClassroomIdentificationCode]",
                "      ,[LocalCourseCode]",
                "      ,[Term]",
                "      ,[SchoolYear]",
                "      ,[UniqueSectionCode]",
                "      ,[LocalEducationAgencyId]",
                "  FROM [bi].[amt.Section]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT distinct [SchoolKey]",
                  "      ,SectionKey",
                  "      ,[ClassPeriodName]",
                  "      ,[ClassroomIdentificationCode]",
                  "      ,[LocalCourseCode]",
                  "      ,[Term]",
                  "      ,[SchoolYear]",
                  "      ,[UniqueSectionCode]",
                  "      ,[LocalEducationAgencyId]",
                  "  FROM [bi].[amt.Section]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT distinct [SchoolKey]",
              "      ,SectionKey",
              "      ,[ClassPeriodName]",
              "      ,[ClassroomIdentificationCode]",
              "      ,[LocalCourseCode]",
              "      ,[Term]",
              "      ,[SchoolYear]",
              "      ,[UniqueSectionCode]",
              "      ,[LocalEducationAgencyId]",
              "  FROM [bi].[amt.Section]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.Section"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT distinct [SchoolKey]",
              "      ,SectionKey",
              "      ,[ClassPeriodName]",
              "      ,[ClassroomIdentificationCode]",
              "      ,[LocalCourseCode]",
              "      ,[Term]",
              "      ,[SchoolYear]",
              "      ,[UniqueSectionCode]",
              "      ,[LocalEducationAgencyId]",
              "  FROM [bi].[amt.Section]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentAssessmentStudentObjectiveAssessmentPointsPossible",
        "isHidden": true,
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ReportingMethod",
            "dataType": "string",
            "sourceColumn": "ReportingMethod",
            "sourceProviderType": "WChar"
          },
          {
            "name": "IdentificationCode",
            "dataType": "string",
            "sourceColumn": "IdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Result",
            "dataType": "int64",
            "sourceColumn": "Result",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ResultDatatype",
            "dataType": "string",
            "sourceColumn": "ResultDatatype",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentResultKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " [StudentObjectiveAssessmentKey] ",
              "& \"^\" & [ReportingMethod]"
            ]
          },
          {
            "name": "ObjectiveAssessmentKeyDB",
            "dataType": "string",
            "sourceColumn": "ObjectiveAssessmentKey"
          },
          {
            "name": "StudentObjectiveAssessmentKey",
            "dataType": "string",
            "sourceColumn": "StudentObjectiveAssessmentKey"
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[AssessmentIdentifier] & \"^\" & [StudentSchoolKey]"
          },
          {
            "name": "StudentSchoolKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolKey"
          }
        ],
        "partitions": [
          {
            "name": "StudentAssessmentStudentObjectiveAssessmentPointsPossible",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [AssessmentIdentifier]",
                "      ,[ReportingMethod]",
                "      , ObjectiveAssessmentKey",
                "      ,[IdentificationCode]",
                "      ,[Namespace]",
                "      ,[StudentAssessmentIdentifier]",
                "      ,[StudentSchoolKey]",
                "      ,[Result]",
                "      ,[ResultDatatype]",
                "      ,StudentObjectiveAssessmentKey",
                "  FROM [bi].[amt.StudentAssessmentStudentObjectiveAssessmentPointsPossible]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentIdentifier]",
                  "      ,[ReportingMethod]",
                  "      , ObjectiveAssessmentKey",
                  "      ,[IdentificationCode]",
                  "      ,[Namespace]",
                  "      ,[StudentAssessmentIdentifier]",
                  "      ,[StudentSchoolKey]",
                  "      ,[Result]",
                  "      ,[ResultDatatype]",
                  "      ,StudentObjectiveAssessmentKey",
                  "  FROM [bi].[amt.StudentAssessmentStudentObjectiveAssessmentPointsPossible]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [AssessmentIdentifier]",
              "      ,[ReportingMethod]",
              "      , ObjectiveAssessmentKey",
              "      ,[IdentificationCode]",
              "      ,[Namespace]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentSchoolKey]",
              "      ,[Result]",
              "      ,[ResultDatatype]",
              "      ,StudentObjectiveAssessmentKey",
              "  FROM [bi].[amt.StudentAssessmentStudentObjectiveAssessmentPointsPossible]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.StudentAssessmentStudentObjectiveAssessmentPointsPossible"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentIdentifier]",
              "      ,[ReportingMethod]",
              "      , ObjectiveAssessmentKey",
              "      ,[IdentificationCode]",
              "      ,[Namespace]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentSchoolKey]",
              "      ,[Result]",
              "      ,[ResultDatatype]",
              "      ,StudentObjectiveAssessmentKey",
              "  FROM [bi].[amt.StudentAssessmentStudentObjectiveAssessmentPointsPossible]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "ObjectiveAssessmentIdentificationCode",
        "isHidden": true,
        "columns": [
          {
            "name": "AssessmentTitle",
            "dataType": "string",
            "sourceColumn": "AssessmentTitle",
            "sourceProviderType": "Char"
          },
          {
            "name": "IdentificationCode",
            "dataType": "string",
            "sourceColumn": "IdentificationCode",
            "sourceProviderType": "Char"
          },
          {
            "name": "ObjectiveContent",
            "dataType": "string",
            "sourceColumn": "ObjectiveContent",
            "sourceProviderType": "Char"
          },
          {
            "name": "Category",
            "dataType": "string",
            "sourceColumn": "Category"
          }
        ],
        "partitions": [
          {
            "name": "ObjectiveAssessmentIdentificationCode",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [AssessmentTitle]",
                "      ,[Category]",
                "      ,[IdentificationCode]",
                "      ,[ObjectiveContent]",
                "  FROM [bi].[ObjectiveAssessmentIdentificationCode]"
              ],
              "dataSource": "PowerBI Database"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentTitle]",
                  "      ,[Category]",
                  "      ,[IdentificationCode]",
                  "      ,[ObjectiveContent]",
                  "  FROM [bi].[ObjectiveAssessmentIdentificationCode]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [AssessmentTitle]",
              "      ,[Category]",
              "      ,[IdentificationCode]",
              "      ,[ObjectiveContent]",
              "  FROM [bi].[ObjectiveAssessmentIdentificationCode]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "ObjectiveAssessmentIdentificationCode"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "dbo"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentTitle]",
              "      ,[Category]",
              "      ,[IdentificationCode]",
              "      ,[ObjectiveContent]",
              "  FROM [bi].[ObjectiveAssessmentIdentificationCode]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentAssessmentStudentObjectiveAssessmentScoreResult",
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ReportingMethod",
            "dataType": "string",
            "sourceColumn": "ReportingMethod",
            "sourceProviderType": "WChar"
          },
          {
            "name": "IdentificationCode",
            "dataType": "string",
            "sourceColumn": "IdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Result",
            "dataType": "int64",
            "sourceColumn": "Result",
            "formatString": "0",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ResultDatatype",
            "dataType": "string",
            "sourceColumn": "ResultDatatype",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "Result%",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "IF (",
              "    StudentAssessmentStudentObjectiveAssessmentScoreResult[Points Possible]",
              "        = BLANK (),",
              "    BLANK (),",
              "     ( [Result] )",
              "        / RELATED ( StudentAssessmentStudentObjectiveAssessmentPointsPossible[Result] )",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%"
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentResultKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " [StudentObjectiveAssessmentKey] ",
              "& \"^\" & [ReportingMethod]"
            ]
          },
          {
            "type": "calculated",
            "name": "Objective",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " MID([IdentificationCode],1,2)"
          },
          {
            "type": "calculated",
            "name": "Objective Content",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "\"A\"/*IF(MID([AssessmentIdentifier],1,3) = \"FSA\", ",
              "LOOKUPVALUE(ObjectiveAssessmentIdentificationCode[ObjectiveContent],ObjectiveAssessmentIdentificationCode[IdentificationCode],[Objective],",
              "                                    ObjectiveAssessmentIdentificationCode[Category], \"FSA\"                                  ",
              "),",
              "BLANK()",
              ")*/"
            ]
          },
          {
            "type": "calculated",
            "name": "Points Possible",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "RELATED ( StudentAssessmentStudentObjectiveAssessmentPointsPossible[Result] )"
          },
          {
            "name": "ObjectiveAssessmentKeyDB",
            "dataType": "string",
            "sourceColumn": "ObjectiveAssessmentKey"
          },
          {
            "name": "StudentObjectiveAssessmentKey",
            "dataType": "string",
            "sourceColumn": "StudentObjectiveAssessmentKey"
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[AssessmentIdentifier] & \"^\" & [StudentSchoolKey]"
          },
          {
            "name": "StudentSchoolKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolKey"
          }
        ],
        "partitions": [
          {
            "name": "StudentAssessmentStudentObjectiveAssessmentScoreResult",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [AssessmentIdentifier]",
                "      ,[ReportingMethod]",
                ", ObjectiveAssessmentKey",
                "      ,[IdentificationCode]",
                "      ,[Namespace]",
                "      ,[StudentAssessmentIdentifier]",
                "      ,[StudentSchoolKey]",
                "      ,[Result]",
                "      ,[ResultDatatype]",
                " ,StudentObjectiveAssessmentKey",
                "  FROM [bi].[amt.StudentAssessmentStudentObjectiveAssessmentScoreResult]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentIdentifier]",
                  "      ,[ReportingMethod]",
                  ", ObjectiveAssessmentKey",
                  "      ,[IdentificationCode]",
                  "      ,[Namespace]",
                  "      ,[StudentAssessmentIdentifier]",
                  "      ,[StudentSchoolKey]",
                  "      ,[Result]",
                  "      ,[ResultDatatype]",
                  " ,StudentObjectiveAssessmentKey",
                  "  FROM [bi].[amt.StudentAssessmentStudentObjectiveAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Objective Assessment Raw Score Summary",
            "expression": [
              "",
              "VAR AssessmentRawScore =",
              "    SUMMARIZE (",
              "        FILTER (",
              "            StudentAssessmentStudentObjectiveAssessmentScoreResult,",
              "            StudentAssessmentStudentObjectiveAssessmentScoreResult[Points Possible]",
              "                <> BLANK ()",
              "        ),",
              "        StudentAssessmentStudentObjectiveAssessmentScoreResult[ObjectiveAssessmentKey],",
              "        \"SumResult\", SUM ( StudentAssessmentStudentObjectiveAssessmentScoreResult[Result] )",
              "    )",
              "RETURN",
              "    CALCULATE ( AVERAGEX ( AssessmentRawScore, VALUE ( [SumResult] ) ) )"
            ]
          },
          {
            "name": "Objective Assessment Possible Score Summary",
            "expression": [
              "",
              "VAR AssessmentPossibleScore =",
              "    SUMMARIZE (",
              "        FILTER (",
              "            StudentAssessmentStudentObjectiveAssessmentScoreResult,",
              "            StudentAssessmentStudentObjectiveAssessmentScoreResult[Points Possible]",
              "                <> BLANK ()",
              "        ),",
              "        StudentAssessmentStudentObjectiveAssessmentScoreResult[ObjectiveAssessmentKey],",
              "        \"SumResult\", SUM ( StudentAssessmentStudentObjectiveAssessmentScoreResult[Points Possible] )",
              "    )",
              "RETURN",
              "    CALCULATE ( AVERAGEX ( AssessmentPossibleScore, VALUE ( [SumResult] ) ) )"
            ]
          },
          {
            "name": "Objective Assessment Raw Score Percent",
            "expression": [
              "",
              "VAR PercentCorrect = ( [Objective Assessment Raw Score Summary] * 100 ) / [Objective Assessment Possible Score Summary]",
              "RETURN",
              "    ROUND ( PercentCorrect, 2 )"
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [AssessmentIdentifier]",
              "      ,[ReportingMethod]",
              ", ObjectiveAssessmentKey",
              "      ,[IdentificationCode]",
              "      ,[Namespace]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentSchoolKey]",
              "      ,[Result]",
              "      ,[ResultDatatype]",
              " ,StudentObjectiveAssessmentKey",
              "  FROM [bi].[amt.StudentAssessmentStudentObjectiveAssessmentScoreResult]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.StudentAssessmentStudentObjectiveAssessmentScoreResult"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [AssessmentIdentifier]",
              "      ,[ReportingMethod]",
              ", ObjectiveAssessmentKey",
              "      ,[IdentificationCode]",
              "      ,[Namespace]",
              "      ,[StudentAssessmentIdentifier]",
              "      ,[StudentSchoolKey]",
              "      ,[Result]",
              "      ,[ResultDatatype]",
              " ,StudentObjectiveAssessmentKey",
              "  FROM [bi].[amt.StudentAssessmentStudentObjectiveAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "MC_ObjectiveAssessmentPerformanceLevel",
        "isHidden": true,
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "IdentificationCode",
            "dataType": "string",
            "sourceColumn": "IdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "name": "MinimumScore",
            "dataType": "string",
            "sourceColumn": "MinimumScore",
            "sourceProviderType": "WChar"
          },
          {
            "name": "MaximumScore",
            "dataType": "string",
            "sourceColumn": "MaximumScore",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ReportingMethod",
            "dataType": "string",
            "sourceColumn": "ReportingMethod"
          },
          {
            "name": "PerformanceResult",
            "dataType": "string",
            "sourceColumn": "PerformanceResult"
          },
          {
            "name": "ResultDataType",
            "dataType": "string",
            "sourceColumn": "ResultDataType"
          }
        ],
        "partitions": [
          {
            "name": "uniformMC_ObjectiveAssessmentPerformanceLevel",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ",
                "       AssessmentIdentifier, ",
                "       ReportingMethod, ",
                "       IdentificationCode, ",
                "       Namespace, ",
                "       PerformanceResult, ",
                "       MinimumScore, ",
                "       MaximumScore, ",
                "       ResultDataType",
                "FROM ",
                "     BI.[amt.MC_ObjectiveAssessmentPerformanceLevel];"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "       AssessmentIdentifier, ",
                  "       ReportingMethod, ",
                  "       IdentificationCode, ",
                  "       Namespace, ",
                  "       PerformanceResult, ",
                  "       MinimumScore, ",
                  "       MaximumScore, ",
                  "       ResultDataType",
                  "FROM ",
                  "     BI.[amt.MC_ObjectiveAssessmentPerformanceLevel];</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "       AssessmentIdentifier, ",
              "       ReportingMethod, ",
              "       IdentificationCode, ",
              "       Namespace, ",
              "       PerformanceResult, ",
              "       MinimumScore, ",
              "       MaximumScore, ",
              "       ResultDataType",
              "FROM ",
              "     BI.[amt.MC_ObjectiveAssessmentPerformanceLevel];"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.MC_ObjectiveAssessmentPerformanceLevel"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "       AssessmentIdentifier, ",
              "       ReportingMethod, ",
              "       IdentificationCode, ",
              "       Namespace, ",
              "       PerformanceResult, ",
              "       MinimumScore, ",
              "       MaximumScore, ",
              "       ResultDataType",
              "FROM ",
              "     BI.[amt.MC_ObjectiveAssessmentPerformanceLevel];</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "MC_StudentAssessmentScoreResult",
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AdministrationDate",
            "dataType": "dateTime",
            "sourceColumn": "AdministrationDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "AcademicSubject",
            "dataType": "string",
            "sourceColumn": "AcademicSubject",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Result",
            "dataType": "string",
            "sourceColumn": "Result",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Version",
            "dataType": "int64",
            "sourceColumn": "Version",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " [StudentSchoolKey]",
              " & \"^\" & [AssessmentIdentifier]",
              " & \"^\" & [StudentAssessmentIdentifier]"
            ]
          },
          {
            "type": "calculated",
            "name": "SchoolYear",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "",
              "IF(MONTH(([AdministrationDate])) < 8, YEAR([AdministrationDate]), ",
              "IF(MONTH([AdministrationDate]) = 8 && DAY([AdministrationDate]) < 11, YEAR([AdministrationDate]),",
              "",
              "",
              "YEAR([AdministrationDate]) + 1",
              "))"
            ]
          },
          {
            "type": "calculated",
            "name": "Current School Key",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "RELATED(Student[Current School ID])"
          },
          {
            "name": "StudentSchoolKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolKey"
          },
          {
            "name": "ReportingMethod",
            "dataType": "string",
            "sourceColumn": "ReportingMethod"
          },
          {
            "name": "Title",
            "dataType": "string",
            "sourceColumn": "Title"
          }
        ],
        "partitions": [
          {
            "name": "uniformMC_StudentAssessmentScoreResult",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ",
                "       AssessmentIdentifier, ",
                "       StudentAssessmentIdentifier, ",
                "       StudentSchoolKey, ",
                "       AdministrationDate, ",
                "       AcademicSubject, ",
                "       ReportingMethod, ",
                "       Title, ",
                "       Result, ",
                "       Version, ",
                "       Namespace",
                "FROM ",
                "     BI.[amt.MC_StudentAssessmentScoreResult];"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "       AssessmentIdentifier, ",
                  "       StudentAssessmentIdentifier, ",
                  "       StudentSchoolKey, ",
                  "       AdministrationDate, ",
                  "       AcademicSubject, ",
                  "       ReportingMethod, ",
                  "       Title, ",
                  "       Result, ",
                  "       Version, ",
                  "       Namespace",
                  "FROM ",
                  "     BI.[amt.MC_StudentAssessmentScoreResult];</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "       AssessmentIdentifier, ",
              "       StudentAssessmentIdentifier, ",
              "       StudentSchoolKey, ",
              "       AdministrationDate, ",
              "       AcademicSubject, ",
              "       ReportingMethod, ",
              "       Title, ",
              "       Result, ",
              "       Version, ",
              "       Namespace",
              "FROM ",
              "     BI.[amt.MC_StudentAssessmentScoreResult];"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.MC_StudentAssessmentScoreResult"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "       AssessmentIdentifier, ",
              "       StudentAssessmentIdentifier, ",
              "       StudentSchoolKey, ",
              "       AdministrationDate, ",
              "       AcademicSubject, ",
              "       ReportingMethod, ",
              "       Title, ",
              "       Result, ",
              "       Version, ",
              "       Namespace",
              "FROM ",
              "     BI.[amt.MC_StudentAssessmentScoreResult];</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "MC_StudentAssessmentStudentObjectiveAssessmentScoreResult",
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ReportingMethod",
            "dataType": "string",
            "sourceColumn": "ReportingMethod",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Result",
            "dataType": "int64",
            "sourceColumn": "Result",
            "formatString": "0",
            "sourceProviderType": "WChar"
          },
          {
            "name": "MaxRawScore",
            "dataType": "int64",
            "sourceColumn": "MaxRawScore",
            "formatString": "0",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PerformanceLevel",
            "dataType": "string",
            "sourceColumn": "PerformanceLevel",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ResultDatatype",
            "dataType": "string",
            "sourceColumn": "ResultDatatype",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "         [StudentSchoolKey]",
              " & \"^\" & [AssessmentIdentifier]",
              " & \"^\" & [StudentAssessmentIdentifier]"
            ]
          },
          {
            "type": "calculated",
            "name": "LearningStandard",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "\"\"",
              "/*IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.6.RP.\") = TRUE(),\"Ratio and Proportional Relationships\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.7.RP.\") = TRUE(),\"Ratio and Proportional Relationships\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.6.EE\") = TRUE(),\"Expressions and Equations\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.7.EE\") = TRUE(),\"Expressions and Equations\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.8.EE\") = TRUE(),\"Expressions and Equations\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.K.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.1.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.2.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.3.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.4.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.5.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.6.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.7.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.8.G\") = TRUE(),\"Geometry\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.6.SP\") = TRUE(),\" Statistics and Probability\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.7.SP\") = TRUE(),\" Statistics and Probability\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.8.SP\") = TRUE(),\" Statistics and Probability\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.6.NS\") = TRUE(),\"The Number System\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.7.NS\") = TRUE(),\"The Number System\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],\"MAFS.8.NS\") = TRUE(),\"The Number System\",",
              "IF(CONTAINSSTRING([LearningStandardItemCode],{\"MAFS.8.F\"}) = TRUE(),\"Functions\",",
              "BLANK()                                         ",
              ")))))))))))))))))))))*/"
            ]
          },
          {
            "name": "ObjectiveDescription",
            "dataType": "string",
            "sourceColumn": "ObjectiveDescription"
          },
          {
            "name": "StudentSchoolKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolKey"
          }
        ],
        "partitions": [
          {
            "name": "uniformMC_StudentAssessmentStudentObjectiveAssessmentScoreResult",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ",
                "       AssessmentIdentifier, ",
                "       ReportingMethod, ",
                "       ObjectiveDescription, ",
                "       Namespace, ",
                "       StudentAssessmentIdentifier, ",
                "       StudentSchoolKey, ",
                "       Result, ",
                "       MaxRawScore, ",
                "       PerformanceLevel, ",
                "       ResultDatatype",
                "FROM ",
                "     BI.[amt.MC_StudentAssessmentStudentObjectiveAssessmentScoreResult];"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
                  "       AssessmentIdentifier, ",
                  "       ReportingMethod, ",
                  "       ObjectiveDescription, ",
                  "       Namespace, ",
                  "       StudentAssessmentIdentifier, ",
                  "       StudentSchoolKey, ",
                  "       Result, ",
                  "       MaxRawScore, ",
                  "       PerformanceLevel, ",
                  "       ResultDatatype",
                  "FROM ",
                  "     BI.[amt.MC_StudentAssessmentStudentObjectiveAssessmentScoreResult];</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "MC^Objective Assessment Raw Score Summary",
            "expression": [
              "",
              "",
              "var AssessmentRawScore = ",
              "           SUMMARIZE(FILTER('MC_StudentAssessmentStudentObjectiveAssessmentScoreResult','MC_StudentAssessmentStudentObjectiveAssessmentScoreResult'[MaxRawScore] <> BLANK()),",
              "                            ",
              "                            'MC_StudentAssessmentStudentObjectiveAssessmentScoreResult'[ObjectiveAssessmentKey],",
              "                             \"SumResult\",SUM('MC_StudentAssessmentStudentObjectiveAssessmentScoreResult'[Result]))",
              "return ",
              "",
              "CALCULATE(AVERAGEX(AssessmentRawScore, VALUE([SumResult])))",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ]
          },
          {
            "name": "MC^Objective Assessment Possible Score Summary",
            "expression": [
              "",
              "",
              "",
              "var AssessmentPossibleScore = ",
              "           SUMMARIZE(FILTER('MC_StudentAssessmentStudentObjectiveAssessmentScoreResult','MC_StudentAssessmentStudentObjectiveAssessmentScoreResult'[MaxRawScore] <> BLANK()),",
              "                            ",
              "                            'MC_StudentAssessmentStudentObjectiveAssessmentScoreResult'[ObjectiveAssessmentKey],",
              "                             \"SumResult\",SUM('MC_StudentAssessmentStudentObjectiveAssessmentScoreResult'[MaxRawScore]))",
              "return ",
              "",
              "CALCULATE(AVERAGEX(AssessmentPossibleScore, VALUE([SumResult])))",
              "",
              ""
            ]
          },
          {
            "name": "MC^Objective Assessment Raw Score Percent",
            "expression": [
              "",
              "",
              "var PercentCorrect = ([MC^Objective Assessment Raw Score Summary] *100)/[MC^Objective Assessment Possible Score Summary]",
              "",
              "return ROUND(PercentCorrect,2)"
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ",
              "       AssessmentIdentifier, ",
              "       ReportingMethod, ",
              "       ObjectiveDescription, ",
              "       Namespace, ",
              "       StudentAssessmentIdentifier, ",
              "       StudentSchoolKey, ",
              "       Result, ",
              "       MaxRawScore, ",
              "       PerformanceLevel, ",
              "       ResultDatatype",
              "FROM ",
              "     BI.[amt.MC_StudentAssessmentStudentObjectiveAssessmentScoreResult];"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.MC_StudentAssessmentStudentObjectiveAssessmentScoreResult"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ",
              "       AssessmentIdentifier, ",
              "       ReportingMethod, ",
              "       ObjectiveDescription, ",
              "       Namespace, ",
              "       StudentAssessmentIdentifier, ",
              "       StudentSchoolKey, ",
              "       Result, ",
              "       MaxRawScore, ",
              "       PerformanceLevel, ",
              "       ResultDatatype",
              "FROM ",
              "     BI.[amt.MC_StudentAssessmentStudentObjectiveAssessmentScoreResult];</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "iReady_StudentAssessmentReportingMethod",
        "isHidden": true,
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AdministrationDate",
            "dataType": "dateTime",
            "sourceColumn": "AdministrationDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "WhenAssessedGradeLevel",
            "dataType": "string",
            "sourceColumn": "WhenAssessedGradeLevel",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AcademicSubject",
            "dataType": "string",
            "sourceColumn": "AcademicSubject",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Result",
            "dataType": "string",
            "sourceColumn": "Result",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Version",
            "dataType": "int64",
            "sourceColumn": "Version",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentSchoolKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolKey"
          },
          {
            "name": "ReportingMethod",
            "dataType": "string",
            "sourceColumn": "ReportingMethod"
          },
          {
            "name": "Title",
            "dataType": "string",
            "sourceColumn": "Title"
          }
        ],
        "partitions": [
          {
            "name": "iReady_StudentAssessmentReportingMethod",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT AssessmentIdentifier",
                "      ,StudentAssessmentIdentifier",
                "      ,StudentSchoolKey",
                "      ,AdministrationDate",
                "      ,WhenAssessedGradeLevel",
                "      ,AcademicSubject",
                "      ,ReportingMethod",
                "      ,Title",
                "      ,Result",
                "      ,Version",
                "      ,Namespace",
                "  FROM BI.[amt.iReady_StudentAssessmentReportingMethod]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT AssessmentIdentifier",
                  "      ,StudentAssessmentIdentifier",
                  "      ,StudentSchoolKey",
                  "      ,AdministrationDate",
                  "      ,WhenAssessedGradeLevel",
                  "      ,AcademicSubject",
                  "      ,ReportingMethod",
                  "      ,Title",
                  "      ,Result",
                  "      ,Version",
                  "      ,Namespace",
                  "  FROM BI.[amt.iReady_StudentAssessmentReportingMethod]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT AssessmentIdentifier",
              "      ,StudentAssessmentIdentifier",
              "      ,StudentSchoolKey",
              "      ,AdministrationDate",
              "      ,WhenAssessedGradeLevel",
              "      ,AcademicSubject",
              "      ,ReportingMethod",
              "      ,Title",
              "      ,Result",
              "      ,Version",
              "      ,Namespace",
              "  FROM BI.[amt.iReady_StudentAssessmentReportingMethod]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.iReady_StudentAssessmentReportingMethod"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT AssessmentIdentifier",
              "      ,StudentAssessmentIdentifier",
              "      ,StudentSchoolKey",
              "      ,AdministrationDate",
              "      ,WhenAssessedGradeLevel",
              "      ,AcademicSubject",
              "      ,ReportingMethod",
              "      ,Title",
              "      ,Result",
              "      ,Version",
              "      ,Namespace",
              "  FROM BI.[amt.iReady_StudentAssessmentReportingMethod]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "iReady_StudentAssessmentScoreResult",
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AdministrationDate",
            "dataType": "dateTime",
            "sourceColumn": "AdministrationDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "AdministrationEndDate",
            "dataType": "dateTime",
            "sourceColumn": "AdministrationEndDate",
            "formatString": "Short Date",
            "sourceProviderType": "DBDate",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "WhenAssessedGradeLevel",
            "dataType": "string",
            "sourceColumn": "WhenAssessedGradeLevel",
            "sourceProviderType": "WChar"
          },
          {
            "name": "AcademicSubject",
            "dataType": "string",
            "sourceColumn": "AcademicSubject",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Result",
            "dataType": "int64",
            "sourceColumn": "Result",
            "formatString": "0",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Version",
            "dataType": "int64",
            "sourceColumn": "Version",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "Proficiency Level",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE('iReady_StudentAssessmentReportingMethod'[Result],'iReady_StudentAssessmentReportingMethod'[ReportingMethod],\"Proficiency level\",",
              "                                                             'iReady_StudentAssessmentReportingMethod'[StudentAssessmentIdentifier],'iReady_StudentAssessmentScoreResult'[StudentAssessmentIdentifier])  ",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "Quontile Measure",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE('iReady_StudentAssessmentReportingMethod'[Result],'iReady_StudentAssessmentReportingMethod'[ReportingMethod],\"Quantile Measure\",",
              "                                                             'iReady_StudentAssessmentReportingMethod'[StudentAssessmentIdentifier],'iReady_StudentAssessmentScoreResult'[StudentAssessmentIdentifier]) "
            ]
          },
          {
            "type": "calculated",
            "name": "Time On Task (minutes)",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE('iReady_StudentAssessmentReportingMethod'[Result],'iReady_StudentAssessmentReportingMethod'[ReportingMethod],\"Time on Task (minutes)\",",
              "                                                             'iReady_StudentAssessmentReportingMethod'[StudentAssessmentIdentifier],'iReady_StudentAssessmentScoreResult'[StudentAssessmentIdentifier]) "
            ]
          },
          {
            "type": "calculated",
            "name": "Quontile Range",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE('iReady_StudentAssessmentReportingMethod'[Result],'iReady_StudentAssessmentReportingMethod'[ReportingMethod],\"Quantile Range\",",
              "                                                             'iReady_StudentAssessmentReportingMethod'[StudentAssessmentIdentifier],",
              "                                                             'iReady_StudentAssessmentScoreResult'[StudentAssessmentIdentifier]) "
            ]
          },
          {
            "type": "calculated",
            "name": "Annual Typical Growth Measure",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE('iReady_StudentAssessmentReportingMethod'[Result],'iReady_StudentAssessmentReportingMethod'[ReportingMethod],\"Annual Typical Growth Measure\",",
              "                                                             'iReady_StudentAssessmentReportingMethod'[StudentAssessmentIdentifier],'iReady_StudentAssessmentScoreResult'[StudentAssessmentIdentifier]) "
            ]
          },
          {
            "type": "calculated",
            "name": "Annual Stretch Growth Measure",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE('iReady_StudentAssessmentReportingMethod'[Result],'iReady_StudentAssessmentReportingMethod'[ReportingMethod],\"Annual Stretch Growth Measure\",",
              "                                                             'iReady_StudentAssessmentReportingMethod'[StudentAssessmentIdentifier],'iReady_StudentAssessmentScoreResult'[StudentAssessmentIdentifier]) "
            ]
          },
          {
            "type": "calculated",
            "name": "Mid On Grade Level Scale Score",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " LOOKUPVALUE('iReady_StudentAssessmentReportingMethod'[Result],'iReady_StudentAssessmentReportingMethod'[ReportingMethod],\"Mid On Grade Level Scale Score\",",
              "                                                             'iReady_StudentAssessmentReportingMethod'[StudentAssessmentIdentifier],'iReady_StudentAssessmentScoreResult'[StudentAssessmentIdentifier]) "
            ]
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "[StudentSchoolKey]",
              " & \"^\" & [AssessmentIdentifier]",
              " & \"^\" & [StudentAssessmentIdentifier]"
            ]
          },
          {
            "type": "calculated",
            "name": "SchoolYear",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "",
              "IF(MONTH(([AdministrationEndDate])) < 8, YEAR([AdministrationEndDate]), ",
              "IF(MONTH([AdministrationEndDate]) = 8 && DAY([AdministrationEndDate]) < 11, YEAR([AdministrationEndDate]),",
              "",
              "",
              "YEAR([AdministrationEndDate]) + 1",
              "))"
            ]
          },
          {
            "type": "calculated",
            "name": "Current School Key",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "RELATED(Student[Current School ID])"
          },
          {
            "name": "StudentSchoolKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolKey"
          },
          {
            "name": "ReportingMethod",
            "dataType": "string",
            "sourceColumn": "ReportingMethod"
          },
          {
            "name": "Title",
            "dataType": "string",
            "sourceColumn": "Title"
          }
        ],
        "partitions": [
          {
            "name": "iReady_StudentAssessmentScoreResult",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT AssessmentIdentifier, ",
                "       StudentAssessmentIdentifier, ",
                "       StudentSchoolKey, ",
                "       AdministrationDate, ",
                "       AdministrationEndDate, ",
                "       WhenAssessedGradeLevel, ",
                "       AcademicSubject, ",
                "       ReportingMethod, ",
                "       Title, ",
                "       Result, ",
                "       Version, ",
                "       Namespace",
                "FROM ",
                "     BI.[amt.iReady_StudentAssessmentScoreResult];"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT AssessmentIdentifier, ",
                  "       StudentAssessmentIdentifier, ",
                  "       StudentSchoolKey, ",
                  "       AdministrationDate, ",
                  "       AdministrationEndDate, ",
                  "       WhenAssessedGradeLevel, ",
                  "       AcademicSubject, ",
                  "       ReportingMethod, ",
                  "       Title, ",
                  "       Result, ",
                  "       Version, ",
                  "       Namespace",
                  "FROM ",
                  "     BI.[amt.iReady_StudentAssessmentScoreResult];</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT AssessmentIdentifier, ",
              "       StudentAssessmentIdentifier, ",
              "       StudentSchoolKey, ",
              "       AdministrationDate, ",
              "       AdministrationEndDate, ",
              "       WhenAssessedGradeLevel, ",
              "       AcademicSubject, ",
              "       ReportingMethod, ",
              "       Title, ",
              "       Result, ",
              "       Version, ",
              "       Namespace",
              "FROM ",
              "     BI.[amt.iReady_StudentAssessmentScoreResult];"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.iReady_StudentAssessmentScoreResult"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT AssessmentIdentifier, ",
              "       StudentAssessmentIdentifier, ",
              "       StudentSchoolKey, ",
              "       AdministrationDate, ",
              "       AdministrationEndDate, ",
              "       WhenAssessedGradeLevel, ",
              "       AcademicSubject, ",
              "       ReportingMethod, ",
              "       Title, ",
              "       Result, ",
              "       Version, ",
              "       Namespace",
              "FROM ",
              "     BI.[amt.iReady_StudentAssessmentScoreResult];</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel",
        "isHidden": true,
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ReportingMethod",
            "dataType": "string",
            "sourceColumn": "ReportingMethod",
            "sourceProviderType": "WChar"
          },
          {
            "name": "IdentificationCode",
            "dataType": "string",
            "sourceColumn": "IdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Result",
            "dataType": "string",
            "sourceColumn": "Result",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ResultDatatype",
            "dataType": "string",
            "sourceColumn": "ResultDatatype",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ObjectiveDescription",
            "dataType": "string",
            "sourceColumn": "ObjectiveDescription"
          },
          {
            "name": "StudentSchoolKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolKey"
          }
        ],
        "partitions": [
          {
            "name": "iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT AssessmentIdentifier",
                "      ,ReportingMethod",
                "      ,IdentificationCode",
                "      ,ObjectiveDescription",
                "      ,Namespace",
                "      ,StudentAssessmentIdentifier",
                "      ,StudentSchoolKey",
                "      ,Result",
                "      ,ResultDataType",
                "  FROM BI.[amt.iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT AssessmentIdentifier",
                  "      ,ReportingMethod",
                  "      ,IdentificationCode",
                  "      ,ObjectiveDescription",
                  "      ,Namespace",
                  "      ,StudentAssessmentIdentifier",
                  "      ,StudentSchoolKey",
                  "      ,Result",
                  "      ,ResultDataType",
                  "  FROM BI.[amt.iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT AssessmentIdentifier",
              "      ,ReportingMethod",
              "      ,IdentificationCode",
              "      ,ObjectiveDescription",
              "      ,Namespace",
              "      ,StudentAssessmentIdentifier",
              "      ,StudentSchoolKey",
              "      ,Result",
              "      ,ResultDataType",
              "  FROM BI.[amt.iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT AssessmentIdentifier",
              "      ,ReportingMethod",
              "      ,IdentificationCode",
              "      ,ObjectiveDescription",
              "      ,Namespace",
              "      ,StudentAssessmentIdentifier",
              "      ,StudentSchoolKey",
              "      ,Result",
              "      ,ResultDataType",
              "  FROM BI.[amt.iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult",
        "columns": [
          {
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "AssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ReportingMethod",
            "dataType": "string",
            "sourceColumn": "ReportingMethod",
            "sourceProviderType": "WChar"
          },
          {
            "name": "IdentificationCode",
            "dataType": "string",
            "sourceColumn": "IdentificationCode",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Namespace",
            "dataType": "string",
            "sourceColumn": "Namespace",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StudentAssessmentIdentifier",
            "dataType": "string",
            "sourceColumn": "StudentAssessmentIdentifier",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Result",
            "dataType": "int64",
            "sourceColumn": "Result",
            "formatString": "0",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ResultDatatype",
            "dataType": "string",
            "sourceColumn": "ResultDatatype",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "Proficiency Level",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "LOOKUPVALUE (",
              "    'iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel'[Result],",
              "    'iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel'[StudentAssessmentIdentifier],",
              "        'iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult'[StudentAssessmentIdentifier],",
              "    'iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel'[IdentificationCode],",
              "        'iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult'[IdentificationCode],",
              "    'iReady_StudentAssessmentStudentObjectiveAssessmentPerformanceLevel'[ReportingMethod],",
              "        'iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult'[ReportingMethod]",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "ObjectiveAssessmentKey",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "         [StudentSchoolKey]",
              " & \"^\" & [AssessmentIdentifier]",
              " & \"^\" & [StudentAssessmentIdentifier]"
            ]
          },
          {
            "name": "ObjectiveDescription",
            "dataType": "string",
            "sourceColumn": "ObjectiveDescription"
          },
          {
            "name": "StudentSchoolKey",
            "dataType": "string",
            "sourceColumn": "StudentSchoolKey"
          }
        ],
        "partitions": [
          {
            "name": "iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT AssessmentIdentifier",
                "      ,ReportingMethod",
                "      ,IdentificationCode",
                "      ,ObjectiveDescription",
                "      ,Namespace",
                "      ,StudentAssessmentIdentifier",
                "      ,StudentSchoolKey",
                "      ,Result",
                "      ,ResultDataType",
                "  FROM BI.[amt.iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult]"
              ],
              "dataSource": "EdFi ODS"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT AssessmentIdentifier",
                  "      ,ReportingMethod",
                  "      ,IdentificationCode",
                  "      ,ObjectiveDescription",
                  "      ,Namespace",
                  "      ,StudentAssessmentIdentifier",
                  "      ,StudentSchoolKey",
                  "      ,Result",
                  "      ,ResultDataType",
                  "  FROM BI.[amt.iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT AssessmentIdentifier",
              "      ,ReportingMethod",
              "      ,IdentificationCode",
              "      ,ObjectiveDescription",
              "      ,Namespace",
              "      ,StudentAssessmentIdentifier",
              "      ,StudentSchoolKey",
              "      ,Result",
              "      ,ResultDataType",
              "  FROM BI.[amt.iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "uniform.iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "bi"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT AssessmentIdentifier",
              "      ,ReportingMethod",
              "      ,IdentificationCode",
              "      ,ObjectiveDescription",
              "      ,Namespace",
              "      ,StudentAssessmentIdentifier",
              "      ,StudentSchoolKey",
              "      ,Result",
              "      ,ResultDataType",
              "  FROM BI.[amt.iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "StudentAssessmentScoreResultGrouped",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "AcademicSubject",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[AcademicSubject]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "AssessmentIdentifier",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[AssessmentIdentifier]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "AssessmentTitle",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[AssessmentTitle]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "GradeLevel",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[GradeLevel]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "AdministrationDate",
            "dataType": "dateTime",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[AdministrationDate]",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Result",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "LOOKUPVALUE(StudentAssessmentScoreResult[Result],",
              "",
              "StudentAssessmentScoreResult[AcademicSubject],StudentAssessmentScoreResultGrouped[AcademicSubject],",
              "StudentAssessmentScoreResult[AssessmentIdentifier],StudentAssessmentScoreResultGrouped[AssessmentIdentifier],",
              "'StudentAssessmentScoreResult'[ReportingMethod],StudentAssessmentScoreResultGrouped[ReportingMethod],",
              "StudentAssessmentScoreResult[AssessmentTitle],StudentAssessmentScoreResultGrouped[AssessmentTitle],",
              "'StudentAssessmentScoreResult'[StudentSchoolKey],'StudentAssessmentScoreResultGrouped'[StudentSchoolKey],",
              "StudentAssessmentScoreResult[GradeLevel],StudentAssessmentScoreResultGrouped[GradeLevel],",
              "StudentAssessmentScoreResult[Namespace],StudentAssessmentScoreResultGrouped[Namespace],",
              "StudentAssessmentScoreResult[AdministrationDate],StudentAssessmentScoreResultGrouped[AdministrationDate])",
              "",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "Achievement Level %",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "LOOKUPVALUE(StudentAssessmentScoreResult[Achievement Level %],",
              "",
              "StudentAssessmentScoreResult[AcademicSubject],StudentAssessmentScoreResultGrouped[AcademicSubject],",
              "StudentAssessmentScoreResult[AssessmentIdentifier],StudentAssessmentScoreResultGrouped[AssessmentIdentifier],",
              "'StudentAssessmentScoreResult'[ReportingMethod],StudentAssessmentScoreResultGrouped[ReportingMethod],",
              "StudentAssessmentScoreResult[AssessmentTitle],StudentAssessmentScoreResultGrouped[AssessmentTitle],",
              "'StudentAssessmentScoreResult'[StudentSchoolKey],'StudentAssessmentScoreResultGrouped'[StudentSchoolKey],",
              "StudentAssessmentScoreResult[GradeLevel],StudentAssessmentScoreResultGrouped[GradeLevel],",
              "StudentAssessmentScoreResult[Namespace],StudentAssessmentScoreResultGrouped[Namespace],",
              "StudentAssessmentScoreResult[AdministrationDate],StudentAssessmentScoreResultGrouped[AdministrationDate])",
              "",
              ""
            ],
            "formatString": "0.00"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Namespace",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Namespace]"
          },
          {
            "type": "calculated",
            "name": "KeyStudentAssessment",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " [StudentAssessmentKey]",
              "/*",
              "[AcademicSubject] & \"^\" & ",
              "[AssessmentIdentifier] & \"^\" & ",
              "[AssessmentReportingMethodTypeId] & \"^\" & ",
              "[StudentUSI] & \"^\" & ",
              "[AdministrationDate] & \"^\" & ",
              "[Namespace]*/"
            ]
          },
          {
            "type": "calculated",
            "name": "LearningGainLevel",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              " ",
              "LOOKUPVALUE(StudentAssessmentScoreResult[LearningGainLevel],",
              "",
              "StudentAssessmentScoreResult[AcademicSubject],StudentAssessmentScoreResultGrouped[AcademicSubject],",
              "StudentAssessmentScoreResult[AssessmentIdentifier],StudentAssessmentScoreResultGrouped[AssessmentIdentifier],",
              "'StudentAssessmentScoreResult'[ReportingMethod],StudentAssessmentScoreResultGrouped[ReportingMethod],",
              "StudentAssessmentScoreResult[AssessmentTitle],StudentAssessmentScoreResultGrouped[AssessmentTitle],",
              "'StudentAssessmentScoreResult'[StudentSchoolKey],'StudentAssessmentScoreResultGrouped'[StudentSchoolKey],",
              "StudentAssessmentScoreResult[GradeLevel],StudentAssessmentScoreResultGrouped[GradeLevel],",
              "StudentAssessmentScoreResult[Namespace],StudentAssessmentScoreResultGrouped[Namespace],",
              "StudentAssessmentScoreResult[AdministrationDate],StudentAssessmentScoreResultGrouped[AdministrationDate])",
              "",
              ""
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "StudentAssessmentKey",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[StudentAssessmentKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "StudentSchoolKey",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[StudentSchoolKey]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "ReportingMethod",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[ReportingMethod]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                " ",
                "GROUPBY(StudentAssessmentScoreResult,",
                "[AcademicSubject],",
                "[AssessmentIdentifier],",
                "[ReportingMethod],",
                "[AssessmentTitle],",
                "[StudentSchoolKey],",
                "[GradeLevel],",
                "[Namespace],[StudentAssessmentKey],",
                "\"AdministrationDate\",MAXX(CURRENTGROUP(),[AdministrationDate])",
                "",
                ")",
                " "
              ]
            }
          }
        ]
      },
      {
        "name": "StaffEducationOrganizationAssignmentAssociation_test",
        "columns": [
          {
            "name": "SchoolID",
            "dataType": "int64",
            "sourceColumn": "SchoolID",
            "formatString": "0",
            "sourceProviderType": "Integer"
          },
          {
            "name": "LocalEducationAgencyId",
            "dataType": "int64",
            "sourceColumn": "LocalEducationAgencyId",
            "formatString": "0",
            "sourceProviderType": "Integer"
          },
          {
            "name": "StaffClassificationType",
            "dataType": "string",
            "sourceColumn": "StaffClassificationType",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PositionTitle",
            "dataType": "string",
            "sourceColumn": "PositionTitle",
            "sourceProviderType": "WChar"
          },
          {
            "name": "LoginID",
            "dataType": "string",
            "sourceColumn": "LoginID",
            "sourceProviderType": "WChar"
          },
          {
            "name": "StaffUSI",
            "dataType": "int64",
            "sourceColumn": "StaffUSI",
            "formatString": "0",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "StaffEducationOrganizationAssignmentAssociation_test_Levy",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [dbo].[StaffEducationOrganizationAssignmentAssociation_test].* ",
                "FROM [dbo].[StaffEducationOrganizationAssignmentAssociation_test]",
                "WHERE LocalEducationAgencyId = 38"
              ],
              "dataSource": "PowerBI Database"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [dbo].[StaffEducationOrganizationAssignmentAssociation_test].* ",
                  "FROM [dbo].[StaffEducationOrganizationAssignmentAssociation_test]",
                  "WHERE LocalEducationAgencyId = 38</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Username",
            "expression": " USERNAME()"
          },
          {
            "name": "RLS_StaffUSI",
            "expression": [
              " CALCULATE(",
              "\t\tFIRSTNONBLANK(StaffEducationOrganizationAssignmentAssociation_test[StaffUSI], TRUE()),",
              "\t\tFILTER(StaffEducationOrganizationAssignmentAssociation_test, StaffEducationOrganizationAssignmentAssociation_test[LoginID] = [Username])",
              "\t             )"
            ]
          },
          {
            "name": "RLS_SchoolId",
            "expression": [
              " CALCULATE(",
              "\t\tFIRSTNONBLANK(StaffEducationOrganizationAssignmentAssociation_test[SchoolId], TRUE()),",
              "\t\tFILTER(StaffEducationOrganizationAssignmentAssociation_test, StaffEducationOrganizationAssignmentAssociation_test[LoginID] = [Username])",
              "\t             )"
            ]
          },
          {
            "name": "RLS_DistrictId",
            "expression": [
              " CALCULATE(",
              "\t\tFIRSTNONBLANK(StaffEducationOrganizationAssignmentAssociation_test[LocalEducationAgencyId], TRUE()),",
              "\t\tFILTER(StaffEducationOrganizationAssignmentAssociation_test, StaffEducationOrganizationAssignmentAssociation_test[LoginID] = [Username])",
              "\t             )"
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT [dbo].[StaffEducationOrganizationAssignmentAssociation_test].* ",
              "FROM [dbo].[StaffEducationOrganizationAssignmentAssociation_test]",
              "WHERE LocalEducationAgencyId = 38"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "StaffEducationOrganizationAssignmentAssociation_test_Levy"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "dbo"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [dbo].[StaffEducationOrganizationAssignmentAssociation_test].* ",
              "FROM [dbo].[StaffEducationOrganizationAssignmentAssociation_test]",
              "WHERE LocalEducationAgencyId = 38</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "LearningGains",
        "columns": [
          {
            "name": "Assessment Title",
            "dataType": "string",
            "sourceColumn": "Assessment",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ScoreLevel",
            "dataType": "int64",
            "sourceColumn": "ScoreLevel",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SubLevel",
            "dataType": "string",
            "sourceColumn": "SubLevel",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Min",
            "dataType": "int64",
            "sourceColumn": "Min",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Max",
            "dataType": "int64",
            "sourceColumn": "Max",
            "sourceProviderType": "Integer"
          },
          {
            "type": "calculated",
            "name": "LearningGainLevel",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 1 && [SubLevel] = \"Low\",1.1,",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 1 && [SubLevel] = \"Middle\",1.2,",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 1 && [SubLevel] = \"High\",1.3,",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 2 && [SubLevel] = \"Low\",2.1,",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 2 && [SubLevel] = \"High\",2.3,",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 3 && [SubLevel] = \"Overall\",3.0,",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 4 && [SubLevel] = \"Overall\",4.0,",
              "IF(MID([Assessment Title],1,4) = \"FSA \" && [ScoreLevel] = 5 && [SubLevel] = \"Overall\",5.0,",
              "",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 1 && [SubLevel] = \"Low\",1.1,",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 1 && [SubLevel] = \"Middle\",1.2,",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 1 && [SubLevel] = \"High\",1.3,",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 2 && [SubLevel] = \"Low\",2.1,",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 2 && [SubLevel] = \"High\",2.3,",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 3 && [SubLevel] = \"Low\",3.1,",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 3 && [SubLevel] = \"High\",3.3,",
              "IF(MID([Assessment Title],1,4) = \"FSAA\" && [ScoreLevel] = 4 && [SubLevel] = \"Overall\",4.0,",
              "BLANK()",
              "))))))))))))))))"
            ]
          },
          {
            "type": "calculated",
            "name": "AssessmentTitle",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF([Assessment Title] = \"FSA ELA\", \"FSA ELA Reading\",",
              "IF([Assessment Title] = \"FSA Algebra 1\", \"FSA Algebra I\",",
              "IF([Assessment Title] = \"FSA Algebra 2\", \"FSA Algebra II\",",
              "IF([Assessment Title] = \"FSA Geometry\", \"FSA Geometry\",",
              "IF([Assessment Title] = \"FSA Math\", \"FSA Mathematics\",",
              "IF([Assessment Title] = \"FSAA Access Algebra 1\", \"FA1 Algebra 1\",",
              "IF([Assessment Title] = \"FSAA Access Geometry\", \"FA1 Geometry\",",
              "IF([Assessment Title] = \"FSAA ELA\", \"FA1 ELA\",",
              "IF([Assessment Title] = \"FSAA Math\", \"FA1 Mathematics\"",
              ")))))))))"
            ]
          },
          {
            "name": "GradeLevel",
            "dataType": "int64",
            "sourceColumn": "GradeLevel"
          },
          {
            "type": "calculated",
            "name": "Grade Level",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "",
              "IF([GradeLevel] = 01,\"First Grade\", ",
              "IF([GradeLevel] = 02, \"Second Grade\",",
              "IF([GradeLevel] = 03, \"Third Grade\", ",
              "IF([GradeLevel] = 04, \"Fourth Grade\",",
              "IF([GradeLevel] = 05, \"Fifth Grade\", ",
              "IF([GradeLevel] = 06, \"Sixth Grade\",",
              "IF([GradeLevel] = 07, \"Seventh Grade\", ",
              "IF([GradeLevel] = 08, \"Eighth Grade\",",
              "IF([GradeLevel] = 09, \"Ninth Grade\",",
              "IF([GradeLevel] = 10, \"Tenth Grade\",",
              "IF([GradeLevel] = 11, \"Eleventh Grade\",",
              "IF([GradeLevel] = 12, \"Twelfth Grade\",",
              "IF([GradeLevel] = 0, \"Kindergarden\", ",
              "IF([GradeLevel] = -1, \"Pre-K\",",
              " \"Other\"",
              "))))))))))))))"
            ]
          }
        ],
        "partitions": [
          {
            "name": "FSA_LearningGains",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": " SELECT [BI].[LearningGains].* FROM [BI].[LearningGains] ",
              "dataSource": "PowerBI Database"
            },
            "annotations": [
              {
                "name": "TableWidgetSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"TableWidgetSerialization\"><AnnotationContent><![CDATA[<?xml version=\"1.0\"?>",
                  "<TableWidgetGridSerialization xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">",
                  "  <ColumnSuggestedType />",
                  "  <ColumnFormat />",
                  "  <ColumnAccuracy />",
                  "  <ColumnCurrencySymbol />",
                  "  <ColumnPositivePattern />",
                  "  <ColumnNegativePattern />",
                  "  <ColumnWidths>",
                  "    <item>",
                  "      <key>",
                  "        <string>Assessment</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>87</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>GradeLevel</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>84</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>ScoreLevel</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>82</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SubLevel</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>73</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Min</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>46</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Max</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>50</int>",
                  "      </value>",
                  "    </item>",
                  "  </ColumnWidths>",
                  "  <ColumnDisplayIndex>",
                  "    <item>",
                  "      <key>",
                  "        <string>Assessment</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>0</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>GradeLevel</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>1</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>ScoreLevel</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>2</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>SubLevel</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>3</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Min</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>4</int>",
                  "      </value>",
                  "    </item>",
                  "    <item>",
                  "      <key>",
                  "        <string>Max</string>",
                  "      </key>",
                  "      <value>",
                  "        <int>5</int>",
                  "      </value>",
                  "    </item>",
                  "  </ColumnDisplayIndex>",
                  "  <ColumnFrozen />",
                  "  <ColumnChecked>",
                  "    <item>",
                  "      <key>",
                  "        <string>GradeLevel</string>",
                  "      </key>",
                  "      <value>",
                  "        <boolean>true</boolean>",
                  "      </value>",
                  "    </item>",
                  "  </ColumnChecked>",
                  "  <ColumnFilter />",
                  "  <SelectionFilter />",
                  "  <FilterParameters />",
                  "  <IsSortDescending>false</IsSortDescending>",
                  "</TableWidgetGridSerialization>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [BI].[LearningGains].* FROM [BI].[LearningGains] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "LearningGains"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "BI"
          },
          {
            "name": "TableWidgetSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"TableWidgetSerialization\"><AnnotationContent><![CDATA[<?xml version=\"1.0\"?>",
              "<TableWidgetGridSerialization xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">",
              "  <ColumnSuggestedType />",
              "  <ColumnFormat />",
              "  <ColumnAccuracy />",
              "  <ColumnCurrencySymbol />",
              "  <ColumnPositivePattern />",
              "  <ColumnNegativePattern />",
              "  <ColumnWidths>",
              "    <item>",
              "      <key>",
              "        <string>Assessment</string>",
              "      </key>",
              "      <value>",
              "        <int>87</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>GradeLevel</string>",
              "      </key>",
              "      <value>",
              "        <int>84</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>ScoreLevel</string>",
              "      </key>",
              "      <value>",
              "        <int>82</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SubLevel</string>",
              "      </key>",
              "      <value>",
              "        <int>73</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Min</string>",
              "      </key>",
              "      <value>",
              "        <int>46</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Max</string>",
              "      </key>",
              "      <value>",
              "        <int>50</int>",
              "      </value>",
              "    </item>",
              "  </ColumnWidths>",
              "  <ColumnDisplayIndex>",
              "    <item>",
              "      <key>",
              "        <string>Assessment</string>",
              "      </key>",
              "      <value>",
              "        <int>0</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>GradeLevel</string>",
              "      </key>",
              "      <value>",
              "        <int>1</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>ScoreLevel</string>",
              "      </key>",
              "      <value>",
              "        <int>2</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>SubLevel</string>",
              "      </key>",
              "      <value>",
              "        <int>3</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Min</string>",
              "      </key>",
              "      <value>",
              "        <int>4</int>",
              "      </value>",
              "    </item>",
              "    <item>",
              "      <key>",
              "        <string>Max</string>",
              "      </key>",
              "      <value>",
              "        <int>5</int>",
              "      </value>",
              "    </item>",
              "  </ColumnDisplayIndex>",
              "  <ColumnFrozen />",
              "  <ColumnChecked>",
              "    <item>",
              "      <key>",
              "        <string>GradeLevel</string>",
              "      </key>",
              "      <value>",
              "        <boolean>true</boolean>",
              "      </value>",
              "    </item>",
              "  </ColumnChecked>",
              "  <ColumnFilter />",
              "  <SelectionFilter />",
              "  <FilterParameters />",
              "  <IsSortDescending>false</IsSortDescending>",
              "</TableWidgetGridSerialization>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "93f00328-47b4-45c9-97cd-f245353e20b9",
        "fromTable": "StaffEducationOrganizationAssignmentAssociation",
        "fromColumn": "StaffUSI",
        "toTable": "Staff",
        "toColumn": "StaffUSI",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "9fe9d41c-c40a-4241-b03d-c320bd8df992",
        "fromTable": "StaffSectionAssociation",
        "fromColumn": "StaffUSI",
        "toTable": "Staff",
        "toColumn": "StaffUSI"
      },
      {
        "name": "fcefe157-b2cc-4dc9-84be-a84b47547002",
        "fromCardinality": "one",
        "fromTable": "StudentAssessmentStudentObjectiveAssessmentPointsPossible",
        "fromColumn": "ObjectiveAssessmentResultKey",
        "toTable": "StudentAssessmentStudentObjectiveAssessmentScoreResult",
        "toColumn": "ObjectiveAssessmentResultKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "e8936bb9-0d35-4fab-9f3e-87ec444482b6",
        "fromTable": "StudentAssessmentScoreResult",
        "fromColumn": "KeyStudentAssessment",
        "toTable": "StudentAssessmentScoreResultGrouped",
        "toColumn": "KeyStudentAssessment",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "9b7605a3-a2e2-444b-9f96-71ebc4ec40d0",
        "fromTable": "StudentAssessmentStudentObjectiveAssessmentScoreResult",
        "fromColumn": "ObjectiveAssessmentKey",
        "toTable": "StudentAssessmentScoreResult",
        "toColumn": "ObjectiveAssessmentKey"
      },
      {
        "name": "b6eca066-0e18-4040-a025-2db022c745d2",
        "fromTable": "StaffSectionAssociation",
        "fromColumn": "SectionKey",
        "toTable": "Section",
        "toColumn": "SectionKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "7c344d80-d9de-463f-82dc-a0d42a945817",
        "fromTable": "StudentSectionAssociation",
        "fromColumn": "SectionKey",
        "toTable": "Section",
        "toColumn": "SectionKey"
      },
      {
        "name": "70b885ec-d280-414a-8f5e-3ee437c52596",
        "fromTable": "StudentAssessmentScoreResult",
        "fromColumn": "StudentSchoolKey",
        "toTable": "Student",
        "toColumn": "StudentSchoolKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "f140b3e3-0ca9-460f-abe5-67b99623fe01",
        "fromTable": "StudentProgramAssociation",
        "fromColumn": "StudentSchoolKey",
        "toTable": "Student",
        "toColumn": "StudentSchoolKey"
      },
      {
        "name": "ad4c5c45-8454-4508-b8ef-1764f34b4086",
        "fromTable": "StudentSectionAssociation",
        "fromColumn": "StudentSchoolKey",
        "toTable": "Student",
        "toColumn": "StudentSchoolKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "7dbcb91c-78d9-45e7-b2b7-a0f9e6249a8f",
        "fromTable": "iReady_StudentAssessmentScoreResult",
        "fromColumn": "StudentSchoolKey",
        "toTable": "Student",
        "toColumn": "StudentSchoolKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "10c9bcf6-97c3-42fd-b669-ccbbd795fc8f",
        "fromTable": "iReady_StudentAssessmentStudentObjectiveAssessmentScoreResult",
        "fromColumn": "ObjectiveAssessmentKey",
        "toTable": "iReady_StudentAssessmentScoreResult",
        "toColumn": "ObjectiveAssessmentKey"
      },
      {
        "name": "96d6247a-afa5-4a3a-96d9-94b8539ac7ee",
        "fromTable": "MC_StudentAssessmentStudentObjectiveAssessmentScoreResult",
        "fromColumn": "ObjectiveAssessmentKey",
        "toTable": "MC_StudentAssessmentScoreResult",
        "toColumn": "ObjectiveAssessmentKey"
      },
      {
        "name": "662cdd39-095b-4fbc-876b-6ffd7de998a3",
        "fromTable": "MC_StudentAssessmentScoreResult",
        "fromColumn": "StudentSchoolKey",
        "toTable": "Student",
        "toColumn": "StudentSchoolKey",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "f6c8c16a-d870-46fb-b35a-7f83d8028a4d",
        "fromTable": "StaffEducationOrganizationAssignmentAssociation",
        "fromColumn": "SchoolKey",
        "toTable": "School",
        "toColumn": "SchoolKey"
      },
      {
        "name": "782a0042-295c-493f-9ded-b5e0a12efb0f",
        "fromTable": "StudentCourseCurrent",
        "fromColumn": "StudentSectionKey",
        "toTable": "StudentSectionAssociation",
        "toColumn": "StudentSectionKey",
        "crossFilteringBehavior": "bothDirections"
      }
    ],
    "roles": [
      {
        "name": "District",
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "StaffEducationOrganizationAssignmentAssociation_test",
            "filterExpression": " StaffEducationOrganizationAssignmentAssociation_test[StaffUSI]= [RLS_StaffUSI]"
          }
        ]
      },
      {
        "name": "Teacher",
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "Staff",
            "filterExpression": " Staff[StaffUSI] = [RLS_StaffUSI]"
          },
          {
            "name": "StaffEducationOrganizationAssignmentAssociation",
            "filterExpression": " StaffEducationOrganizationAssignmentAssociation[StaffUSI]= [RLS_StaffUSI]"
          },
          {
            "name": "Section",
            "filterExpression": [
              "[SectionKey] IN SELECTCOLUMNS(FILTER(",
              "StaffSectionAssociation,RELATED(Staff[StaffUSI]) = [RLS_StaffUSI]",
              "),",
              "\"SectionKey\",",
              "[SectionKey])"
            ]
          },
          {
            "name": "StaffEducationOrganizationAssignmentAssociation_test",
            "filterExpression": " StaffEducationOrganizationAssignmentAssociation_test[StaffUSI]= [RLS_StaffUSI]"
          },
          {
            "name": "StudentSectionAssociation",
            "filterExpression": "'StudentSectionAssociation'[SchoolKey] = [RLS_SchoolId]"
          },
          {
            "name": "Student",
            "filterExpression": "Student[Current School ID] = [RLS_SchoolId]"
          },
          {
            "name": "iReady_StudentAssessmentScoreResult",
            "filterExpression": "'iReady_StudentAssessmentScoreResult'[Current School Key] = [RLS_SchoolId]"
          },
          {
            "name": "StudentAssessmentScoreResult",
            "filterExpression": "StudentAssessmentScoreResult[Current School ID] = [RLS_SchoolId]"
          },
          {
            "name": "MC_StudentAssessmentScoreResult",
            "filterExpression": "'MC_StudentAssessmentScoreResult'[Current School Key] = [RLS_SchoolId]"
          }
        ]
      },
      {
        "name": "School",
        "modelPermission": "read",
        "tablePermissions": [
          {
            "name": "StudentSectionAssociation",
            "filterExpression": "'StudentSectionAssociation'[SchoolKey] = [RLS_SchoolId]"
          },
          {
            "name": "StaffSectionAssociation",
            "filterExpression": "'StaffSectionAssociation'[SchoolKey] = [RLS_SchoolId]"
          },
          {
            "name": "Section",
            "filterExpression": "'Section'[SchoolKey] = [RLS_SchoolId]"
          },
          {
            "name": "Student",
            "filterExpression": "Student[Current School ID] = [RLS_SchoolId]"
          },
          {
            "name": "School",
            "filterExpression": "'School'[SchoolKey] = [RLS_SchoolId]"
          },
          {
            "name": "StudentAssessmentScoreResult",
            "filterExpression": "StudentAssessmentScoreResult[Current School ID] = [RLS_SchoolId]"
          },
          {
            "name": "MC_StudentAssessmentScoreResult",
            "filterExpression": "'MC_StudentAssessmentScoreResult'[Current School Key] = [RLS_SchoolId]"
          },
          {
            "name": "iReady_StudentAssessmentScoreResult",
            "filterExpression": "'iReady_StudentAssessmentScoreResult'[Current School Key] = [RLS_SchoolId]"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "400"
      }
    ]
  },
  "id": "SemanticModel"
}